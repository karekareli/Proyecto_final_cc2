#include <SFML/Graphics.hpp>
#include <vector>
#include <cmath>
#include <iostream>
#include <stdexcept>
#include <memory>
#include <random>
#include "monstruo.h"
#include "Header1.h"
#include <thread>


class Juego {
public:
    static Juego& obtenerInstancia() {//Para el patron de diseño singleton 
        static Juego instanciaUnica;
        return instanciaUnica;
    }

    void correr();

private:

    Juego(const Juego&) = delete;
    Juego& operator=(const Juego&) = delete;
    Juego();

    void procesarEventos();
    void actualizar();
    void dibujar();
    void manejarEntradaJugador(sf::Keyboard::Key tecla, bool presionada);
    void manejarEntradaJugador2(sf::Keyboard::Key tecla, bool presionada);

    void cargarJugadorTexturas();
    void cargarJugador2Texturas();
    bool verificarColision(const sf::Sprite& jugador);

private:
    Mapa mapa; ///////////////para mapaaaaaa

    sf::Sprite jugador;
    sf::Texture jugadorTex[4];
    sf::Sprite jugador2;
    sf::Texture jugador2Tex[4];
    float velocidad;

    sf::RenderWindow ventana;

    sf::View vista;

    sf::Clock reloj;
    std::vector<sf::Vector2f> direcciones;
    const float distanciaMaxima;


    const float distanciaMaxima2; //Para los zombies
    std::vector<std::unique_ptr<Zombie>> zombies;//Nueva funcionalidad
    void generarZombies(std::vector<sf::Vector2f >&);//Generar zombies
    sf::Texture zombiesTex[4];//testuras para los zombies


    void generarFantasmas(std::vector<sf::Vector2f>& posicionesFantasmas);
    sf::Texture monstruoTex[4];

    std::vector<std::unique_ptr<Fantasma>> fantasmas;

    sf::RectangleShape fondo;
    sf::Texture fantasmaTex;
    sf::Sprite fantasma;
    sf::RectangleShape barraVidaFantasma;
    int vidaFantasma;
    bool mostrarFantasma;

    std::vector<sf::Sprite> rayos;
    sf::Texture rayoTexturas[4];

    sf::RectangleShape barraVidaJugador;
    sf::RectangleShape barraVidaJugador2;

    float vidaJugador;
    float vidaJugador2;

    struct {
        float x;
        float y;
        float angle;
    } rayoPotencialDireccion;

    struct {
        float x;
        float y;
        float angle;
    } rayoPotencialDireccion2;

    bool moviendoArriba;
    bool moviendoAbajo;
    bool moviendoIzquierda;
    bool moviendoDerecha;
    bool yaDisparo;
    bool disparando;

    bool moviendoArriba2;
    bool moviendoAbajo2;
    bool moviendoIzquierda2;
    bool moviendoDerecha2;
    bool yaDisparo2;
    bool disparando2;
};

Juego::Juego()
    : ventana(sf::VideoMode(1000, 1000), "Mi Juego")
    , distanciaMaxima(1000)
    , jugador()
    , jugador2()
    , rayoPotencialDireccion{ 1.f, 0.f, 0.f }
    , rayoPotencialDireccion2{ 1.f, 0.f, 0.f }
    , velocidad(5.f)
    , mostrarFantasma(true)
    , vidaFantasma(5)
    , moviendoArriba(false)
    , moviendoAbajo(false)
    , moviendoIzquierda(false)
    , moviendoDerecha(false)
    , yaDisparo(false)
    , disparando(false)
    , moviendoArriba2(false)
    , moviendoAbajo2(false)
    , moviendoIzquierda2(false)
    , moviendoDerecha2(false)
    , yaDisparo2(false)
    , disparando2(false)
    , vidaJugador(10)
    , vidaJugador2(10)
    , distanciaMaxima2(1500)
{
    ventana.setFramerateLimit(60);
    jugador.setPosition(400.f, 300.f);
    jugador2.setPosition(450.f, 300.f);

    fondo.setSize(sf::Vector2f(10000.f, 10000.f));
    fondo.setFillColor(sf::Color(9, 56, 5));

    vista.setSize(ventana.getSize().x + 300, ventana.getSize().y + 300);


    //////////////////////////////Para renderizar el mapa
    auto crearCamino = std::make_unique<crearcamino>();
    auto crearPasto = std::make_unique<crearpasto>();
    auto crearFlor = std::make_unique<crearflor>();
    auto crearFlor2 = std::make_unique<crearflor2>();
    auto crearPasto1 = std::make_unique<crearpasto1>();
    auto crearPasto2 = std::make_unique<crearpasto2>();
    auto crearTumba1 = std::make_unique<creartumba1>();
    auto crearTumba2 = std::make_unique<creartumba2>();
    auto crearTumba3 = std::make_unique<creartumba3>();
    auto crearTumba4 = std::make_unique<creartumba4>();
    auto crearCasa = std::make_unique<crearcasa>();
    auto crearLago = std::make_unique<crearlago>();
    ///////////////////////



    mapa.creacion(std::move(crearLago));
    mapa.crearelemento({ {700.f, 5200.f},{8600.f, 303.f},{3000.f, 600.f} ,{ 9000.f, 7000.f } });

    mapa.creacion(std::move(crearCasa));
    mapa.crearelemento({ {900.f, 203.f},{3000.f, 203.f}, { 8100.f, 200.f } });

    mapa.creacion(std::move(crearPasto1));
    mapa.crearelemento({ {409.f, 5106.f}, {804.f, 741.f}, {500.f, 381.f}, {702.f, 620.f}, {909.f, 741.f},
{1013.f, 701.f}, {1303.f, 2000.f}, {4014.f, 590.f}, {2001.f, 48.f}, {1004.f, 703.f},
{300.f, 892.f}, {550.f, 718.f}, {782.f, 281.f}, {491.f, 702.f}, {800.f, 3900.f},
{501.f, 722.f}, {743.f, 492.f}, {510.f, 382.f}, {1030.f, 890.f}, {551.f, 851.f},
{825.f, 510.f}, {390.f, 974.f}, {993.f, 1228.f}, {375.f, 580.f}, {719.f, 790.f},{1895.f, 956.f}, {7846.f, 749.f}, {7506.f, 383.f}, {7727.f, 626.f}, {1997.f, 741.f},
{400.f, 712.f}, {336.f, 603.f}, {442.f, 593.f}, {517.f, 4800.f}, {1380.f, 733.f},
{397.f, 492.f}, {557.f, 381.f}, {727.f, 8084.f}, {497.f, 721.f}, {797.f, 595.f},
{823.f, 924.f}, {748.f, 492.f}, {508.f, 3801.f}, {838.f, 992.f}, {457.f, 850.f},
{827.f, 519.f}, {327.f, 941.f}, {937.f, 1081.f}, {357.f, 582.f}, {597.f, 2905.f},
{537.f, 484.f}, {847.f, 592.f}, {737.f, 805.f}, {928.f, 950.f}, {937.f, 941.f},

        {4924.f, 1504.f}, {5134.f, 7324.f}, {6934.f, 1414.f}, {7824.f, 3853.f}, {8435.f, 5203.f}, {9303.f, 1953.f}, {1843.f, 7494.f}, {2503.f, 3833.f}, {3724.f, 5623.f}, {4994.f, 7414.f},
{6134.f, 1715.f}, {7333.f, 2036.f}, {8436.f, 5933.f}, {9214.f, 4806.f}, {3955.f, 1523.f}, {5139.f, 7324.f}, {6394.f, 4924.f}, {7554.f, 3815.f}, {8724.f, 2841.f}, {9494.f, 7215.f},
{4194.f, 3954.f}, {5220.f, 1244.f}, {6745.f, 4925.f}, {7505.f, 3816.f}, {8135.f, 2923.f}, {9154.f, 8504.f}, {3956.f, 7224.f}, {4824.f, 5191.f}, {6324.f, 9414.f}, {7134.f, 1816.f},
{8354.f, 5824.f}, {9194.f, 2954.f}, {1534.f, 4844.f}, {2844.f, 5924.f}, {3734.f, 8054.f}, {4925.f, 1504.f}, {5139.f, 7325.f}, {6934.f, 1414.f}, {7824.f, 3854.f}, {8437.f, 5204.f},
{9304.f, 1954.f}, {1844.f, 7495.f}, {2504.f, 3834.f}, {3725.f, 5624.f}, {4995.f, 7415.f}, {6135.f, 1714.f}, {7334.f, 2035.f}, {8438.f, 5934.f}, {9215.f, 4805.f}, {3956.f, 1524.f},
{5140.f, 7326.f}, {6395.f, 4925.f}, {7555.f, 3816.f}, {8725.f, 2842.f}, {9495.f, 7216.f}, {4195.f, 3955.f}, {5221.f, 1245.f}, {6746.f, 4926.f}, {7506.f, 3817.f}, {8136.f, 2924.f},
{9155.f, 8505.f}, {3957.f, 7225.f}, {4825.f, 5192.f}, {6325.f, 9415.f}, {7135.f, 1815.f}, {8355.f, 5825.f}, {9195.f, 2955.f}, {1535.f, 4845.f}, {2845.f, 5925.f}, {3735.f, 8055.f},
{4926.f, 1505.f}, {5141.f, 7327.f}, {6935.f, 1415.f}, {7825.f, 3855.f}, {8439.f, 5205.f}, {9305.f, 1955.f}, {1845.f, 7496.f}, {2505.f, 3835.f}, {3726.f, 5625.f}, {4996.f, 7416.f},
{6136.f, 1713.f}, {7335.f, 2034.f}, {8440.f, 5935.f}, {9216.f, 4804.f}, {3957.f, 1525.f}, {5142.f, 7328.f}, {6396.f, 4926.f}, {7556.f, 3817.f}, {8726.f, 2843.f}, {9496.f, 7217.f},
{4196.f, 3956.f}, {5222.f, 1246.f}, {6747.f, 4927.f}, {7507.f, 3818.f}, {8137.f, 2925.f}, {9156.f, 8506.f}, {3958.f, 7226.f}, {4826.f, 5193.f}, {6326.f, 9416.f}, {7136.f, 1814.f},
{8356.f, 5826.f}, {9196.f, 2956.f}, {1536.f, 4846.f}, {2846.f, 5926.f}, {3736.f, 8056.f}, {4927.f, 1506.f}, {5143.f, 7329.f}, {6936.f, 1416.f}, {7826.f, 3856.f}, {8441.f, 5206.f},
{9306.f, 1956.f}, {1846.f, 7497.f}, {2506.f, 3836.f}, {3727.f, 5626.f}, {4997.f, 7417.f}, {6137.f, 1712.f}, {7336.f, 2033.f}, {8442.f, 5936.f}, {9217.f, 4803.f}, {3958.f, 1526.f},
{5144.f, 7330.f}, {6397.f, 4927.f}, {7557.f, 3818.f}, {8727.f, 2844.f}, {9497.f, 7218.f}, {4197.f, 3957.f}, {5223.f, 1247.f}, {6748.f, 4928.f}, {7508.f, 3819.f}, {8138.f, 2926.f},
{9157.f, 8507.f}, {3959.f, 7227.f}, {4827.f, 5194.f}, {6327.f, 9417.f}, {7137.f, 1813.f}, {8357.f, 5827.f}, {9197.f, 2957.f}, {1537.f, 4847.f}, {2847.f, 5927.f}, {3737.f, 8057.f},
{4928.f, 1507.f}, {5145.f, 7331.f}, {6937.f, 1417.f}, {7827.f, 3857.f}, {8443.f, 5207.f}, {9307.f, 1957.f}, {1847.f, 7498.f}, {2507.f, 3837.f}, {3728.f, 5627.f}, {4998.f, 7418.f},
{6138.f, 1711.f}, {7337.f, 2032.f}, {8444.f, 5937.f}, {9218.f, 4802.f}, {3959.f, 1527.f}, {5146.f, 7332.f}, {6398.f, 4928.f}, {7558.f, 3819.f}, {8728.f, 2845.f}, {9498.f, 7219.f},
{4198.f, 3958.f}, {5224.f, 1248.f}, {6749.f, 4929.f}, {7509.f, 3820.f}, {8139.f, 2927.f}, {9158.f, 8508.f}, {3960.f, 7228.f}, {4828.f, 5195.f}, {6328.f, 9418.f}, {7138.f, 1812.f},
{8358.f, 5828.f}, {9198.f, 2958.f}, {1538.f, 4848.f}, {2848.f, 5928.f}, {3738.f, 8058.f}, {4929.f, 1508.f}, {5147.f, 7333.f}, {6938.f, 1418.f}, {7828.f, 3858.f}, {8445.f, 5208.f},
{9308.f, 1958.f}, {1848.f, 7499.f}, {2508.f, 3838.f}, {3729.f, 5628.f}, {4999.f, 7419.f}, {6139.f, 1710.f}, {7338.f, 2031.f}, {8446.f, 5938.f}, {9219.f, 4801.f}, {3960.f, 1528.f},
{5148.f, 7334.f}, {6399.f, 4929.f}, {7559.f, 3820.f}, {8729.f, 2846.f}, {9499.f, 7220.f}, {4199.f, 3959.f}, {5225.f, 1249.f}, {6750.f, 4930.f}, {7510.f, 3821.f}, {8140.f, 2928.f},
{9159.f, 8509.f}, {3961.f, 7229.f}, {4829.f, 5196.f}, {6329.f, 9419.f}, {7139.f, 1811.f}, {8359.f, 5829.f}, {9199.f, 2959.f}, {1539.f, 4849.f}, {2849.f, 5929.f}, {3739.f, 8059.f},
{4930.f, 1509.f}, {5149.f, 7335.f}, {6939.f, 1419.f}, {7829.f, 3859.f}, {8447.f, 5209.f}, {9309.f, 1959.f}, {1849.f, 7500.f}, {2509.f, 3839.f}, {3730.f, 5629.f}, {5000.f, 7420.f},
{6140.f, 1709.f}, {7339.f, 2030.f}, {8448.f, 5939.f}, {9220.f, 4800.f}, {3961.f, 1529.f}, {5150.f, 7336.f}, {6400.f, 4930.f}, {7560.f, 3821.f}, {8730.f, 2847.f}, {9500.f, 7221.f},
{4200.f, 3960.f}, {5226.f, 1250.f}, {6751.f, 4931.f}, {7511.f, 3822.f}, {8141.f, 2929.f}, {9160.f, 8510.f}, {3962.f, 7230.f}, {4830.f, 5197.f}, {6330.f, 9420.f}, {7140.f, 1810.f},
{8360.f, 5830.f}, {9200.f, 2960.f}, {1540.f, 4850.f}, {2850.f, 5930.f}, {3740.f, 8060.f}, {4931.f, 1510.f}, {5151.f, 7337.f}, {6940.f, 1420.f}, {7830.f, 3860.f}, {8449.f, 5210.f},
{9310.f, 1960.f}, {1850.f, 7501.f}, {2510.f, 3840.f}, {3731.f, 5630.f}, {5001.f, 7421.f}, {6141.f, 1708.f}, {7340.f, 2029.f}, {8450.f, 5940.f}, {9221.f, 4799.f}, {3962.f, 1530.f},
{5152.f, 7338.f}, {6401.f, 4931.f}, {7561.f, 3822.f}, {8731.f, 2848.f}, {9501.f, 7222.f}, {4201.f, 3961.f}, {5227.f, 1251.f}, {6752.f, 4932.f}, {7512.f, 3823.f}, {8142.f, 2930.f},
{9161.f, 8511.f}, {3963.f, 7231.f}, {4831.f, 5198.f}, {6331.f, 9421.f}, {7141.f, 1809.f}, {8361.f, 5831.f}, {9201.f, 2961.f}, {1541.f, 4851.f}, {2851.f, 5931.f}, {3741.f, 8061.f},
{4932.f, 1511.f}, {5153.f, 7339.f}, {6941.f, 1421.f}, {7831.f, 3861.f}, {8451.f, 5211.f}, {9311.f, 1961.f}, {1851.f, 7502.f}, {2511.f, 3841.f}, {3732.f, 5631.f}, {5002.f, 7422.f},
{6142.f, 1707.f}, {7341.f, 2028.f}, {8452.f, 5941.f}, {9222.f, 4798.f}, {3963.f, 1531.f}, {5154.f, 7340.f}, {6402.f, 4932.f}, {7562.f, 3823.f}, {8732.f, 2849.f}, {9502.f, 7223.f},
{4202.f, 3962.f}, {5228.f, 1252.f}, {6753.f, 4933.f}, {7513.f, 3824.f}, {8143.f, 2931.f}, {9162.f, 8512.f}, {3964.f, 7232.f}, {4832.f, 5199.f}, {6332.f, 9422.f}, {7142.f, 1808.f},
{8362.f, 5832.f}, {9202.f, 2962.f}, {1542.f, 4852.f}, {2852.f, 5932.f}, {3742.f, 8062.f}, {4933.f, 1512.f}, {5155.f, 7341.f}, {6942.f, 1422.f}, {7832.f, 3862.f}, {8452.f, 5212.f},
{9312.f, 1962.f}, {1852.f, 7503.f}, {2512.f, 3842.f}, {3733.f, 5632.f}, {5003.f, 7423.f}, {6143.f, 1706.f}, {7342.f, 2027.f}, {8453.f, 5942.f}, {9223.f, 4797.f}, {3964.f, 1532.f},
{5156.f, 7342.f}, {6403.f, 4933.f}, {7563.f, 3824.f}, {8733.f, 2850.f}, {9503.f, 7224.f}, {4203.f, 3963.f}, {5229.f, 1253.f}, {6754.f, 4934.f}, {7514.f, 3825.f}, {8144.f, 2932.f},
{9163.f, 8513.f}, {3965.f, 7233.f}, {4833.f, 5200.f}, {6333.f, 9423.f}, {7143.f, 1807.f}, {8363.f, 5833.f}, {9203.f, 2963.f}, {1543.f, 4853.f}, {2853.f, 5933.f}, {3743.f, 8063.f},
{4934.f, 1513.f}, {5157.f, 7343.f}, {6943.f, 1423.f}, {7833.f, 3863.f}, {8454.f, 5213.f}, {9313.f, 1963.f}, {1853.f, 7504.f}, {2513.f, 3843.f}, {3734.f, 5633.f}, {5004.f, 7424.f},
{6144.f, 1705.f}, {7343.f, 2026.f}, {8455.f, 5943.f}, {9224.f, 4796.f}, {3965.f, 1533.f}, {5158.f, 7344.f}, {6404.f, 4934.f}, {7564.f, 3825.f}, {8734.f, 2851.f}, {9504.f, 7225.f},
{4204.f, 3964.f}, {5230.f, 1254.f}, {6755.f, 4935.f}, {7515.f, 3826.f}, {8145.f, 2933.f}, {9164.f, 8514.f}, {3966.f, 7234.f}, {4834.f, 5201.f}, {6334.f, 9424.f}, {7144.f, 1806.f},
{8364.f, 5834.f}, {9204.f, 2964.f}, {1544.f, 4854.f}, {2854.f, 5934.f}, {3744.f, 8064.f}, {4935.f, 1514.f}, {5159.f, 7345.f}, {6944.f, 1424.f}, {7834.f, 3864.f}, {8455.f, 5214.f},
{9314.f, 1964.f}, {1854.f, 7505.f}, {2514.f, 3844.f}, {3735.f, 5634.f}, {5005.f, 7425.f}, {6145.f, 1704.f}, {7344.f, 2025.f}, {8456.f, 5944.f}, {9225.f, 4795.f}, {3966.f, 1534.f},
{5160.f, 7346.f}, {6405.f, 4935.f}, {7565.f, 3826.f}, {8735.f, 2852.f}, {9505.f, 7226.f}, {4205.f, 3965.f}, {5231.f, 1255.f}, {6756.f, 4936.f}, {7516.f, 3827.f}, {8146.f, 2934.f},
{9165.f, 8515.f}, {3967.f, 7235.f}, {4835.f, 5202.f}, {6335.f, 9425.f}, {7145.f, 1805.f}, {8365.f, 5835.f}, {9205.f, 2965.f}, {1545.f, 4855.f}, {2855.f, 5935.f}, {3745.f, 8065.f},
{4936.f, 1515.f}, {5161.f, 7347.f}, {6945.f, 1425.f}, {7835.f, 3865.f}, {8456.f, 5215.f}, {9315.f, 1965.f}, {1855.f, 7506.f}, {2515.f, 3845.f}, {3736.f, 5635.f}, {5006.f, 7426.f},
{6146.f, 1703.f}, {7345.f, 2024.f}, {8457.f, 5945.f}, {9226.f, 4794.f}, {3967.f, 1535.f}, {5162.f, 7348.f}, {6406.f, 4936.f}, {7566.f, 3827.f}, {8736.f, 2853.f}, {9506.f, 7227.f},
{4206.f, 3966.f}, {5232.f, 1256.f}, {6757.f, 4937.f}, {7517.f, 3828.f}, {8147.f, 2935.f}, {9166.f, 8516.f}, {3968.f, 7236.f}, {4836.f, 5203.f}, {6336.f, 9426.f}, {7146.f, 1804.f},
{8366.f, 5836.f}, {9206.f, 2966.f}, {1546.f, 4856.f}, {2856.f, 5936.f}, {3746.f, 8066.f}, {4937.f, 1516.f}, {5163.f, 7349.f}, {6946.f, 1426.f}, {7836.f, 3866.f}, {8457.f, 5216.f},
{9316.f, 1966.f}, {1856.f, 7507.f}, {2516.f, 3846.f}, {3737.f, 5636.f}, {5007.f, 7427.f}, {6147.f, 1702.f}, {7346.f, 2023.f}, {8458.f, 5946.f}, {9227.f, 4793.f}, {3968.f, 1536.f},
{5164.f, 7350.f}, {6407.f, 4937.f}, {7567.f, 3828.f}, {8737.f, 2854.f}, {9507.f, 7228.f}, {4207.f, 3967.f}, {5233.f, 1257.f}, {6758.f, 4938.f}, {7518.f, 3829.f}, {8148.f, 2936.f},
{9167.f, 8517.f}, {3969.f, 7237.f}, {4837.f, 5204.f}, {6337.f, 9427.f}, {7147.f, 1803.f}, {8367.f, 5837.f}, {9207.f, 2967.f}, {1547.f, 4857.f}, {2857.f, 5937.f}, {3747.f, 8067.f},
{4938.f, 1517.f}, {5165.f, 7351.f}, {6947.f, 1427.f}, {7837.f, 3867.f}, {8458.f, 5217.f}, {9317.f, 1967.f}, {1857.f, 7508.f}, {2517.f, 3847.f}, {3738.f, 5637.f}, {5008.f, 7428.f},
{6148.f, 1701.f}, {7347.f, 2022.f}, {8459.f, 5947.f}, {9228.f, 4792.f}, {3969.f, 1537.f}, {5166.f, 7352.f}, {6408.f, 4938.f}, {7568.f, 3829.f}, {8738.f, 2855.f}, {9508.f, 7229.f},
{4208.f, 3968.f}, {5234.f, 1258.f}, {6759.f, 4939.f}, {7519.f, 3830.f}, {8149.f, 2937.f}, {9168.f, 8518.f}, {3970.f, 7238.f}, {4838.f, 5205.f}, {6338.f, 9428.f}, {7148.f, 1802.f},
{8368.f, 5838.f}, {9208.f, 2968.f}, {1548.f, 4858.f}, {2858.f, 5938.f}, {3748.f, 8068.f}, {4939.f, 1518.f}, {5167.f, 7353.f}, {6948.f, 1428.f}, {7838.f, 3868.f}, {8459.f, 5218.f},
{9318.f, 1968.f}, {1858.f, 7509.f}, {2518.f, 3848.f}, {3739.f, 5638.f}, {5009.f, 7429.f}, {6149.f, 1700.f}, {7348.f, 2021.f}, {8460.f, 5948.f}, {9229.f, 4791.f}, {3970.f, 1538.f},
{5168.f, 7354.f}, {6409.f, 4939.f}, {7569.f, 3830.f}, });

    mapa.creacion(std::move(crearPasto2));//Para rellenar
    mapa.crearelemento({ {827.f, 385.f}, {443.f, 520.f}, {307.f, 195.f}, {847.f, 749.f}, {507.f, 383.f},
{728.f, 562.f}, {998.f, 741.f}, {539.f, 701.f}, {338.f, 203.f}, {444.f, 593.f},
{418.f, 980.f}, {1146.f, 733.f}, {1398.f, 492.f}, {1558.f, 381.f}, {728.f, 2184.f},
{498.f, 721.f}, {199.f, 395.f}, {904.f, 5004.f}, {749.f, 492.f}, {509.f, 382.f},
{340.f, 592.f}, {158.f, 850.f}, {828.f, 519.f}, {328.f, 941.f}, {138.f, 981.f},
{358.f, 582.f}, {198.f, 295.f}, {538.f, 484.f}, {848.f, 592.f}, {738.f, 805.f},
{929.f, 150.f}, {938.f, 141.f}, {828.f, 385.f}, {444.f, 520.f}, {400.f, 795.f},
{849.f, 749.f}, {508.f, 383.f}, {729.f, 562.f}, {999.f, 741.f}, {740.f, 871.f},
{339.f, 203.f}, {445.f, 593.f}, {719.f, 480.f}, {547.f, 733.f}, {399.f, 492.f},
{559.f, 381.f}, {729.f, 284.f}, {499.f, 721.f}, {600.f, 395.f}, {725.f, 524.f},
{750.f, 492.f}, {510.f, 382.f}, {1401.f, 2092.f}, {459.f, 8500.f}, {829.f, 519.f},
{329.f, 941.f}, {939.f, 981.f}, {359.f, 582.f}, {999.f, 666.f}, {539.f, 484.f} ,{8739.f, 2856.f}, {9509.f, 7230.f}, {4209.f, 3969.f}, {5235.f, 1259.f}, {6760.f, 4940.f}, {7520.f, 3831.f}, {8150.f, 2938.f},
{9169.f, 8519.f}, {3971.f, 7239.f}, {4839.f, 5206.f}, {6339.f, 9429.f}, {7149.f, 1801.f}, {8369.f, 5839.f}, {9209.f, 2969.f}, {1549.f, 4859.f}, {2859.f, 5939.f}, {3749.f, 8069.f},
{4940.f, 1519.f}, {5169.f, 7355.f}, {6949.f, 1429.f}, {7839.f, 3869.f}, {8460.f, 5219.f}, {9319.f, 1969.f}, {1859.f, 7510.f}, {2519.f, 3849.f}, {3740.f, 5640.f}, {5010.f, 7430.f},
{6140.f, 1699.f}, {7349.f, 2020.f}, {8461.f, 5949.f}, {9230.f, 4790.f}, {3971.f, 1539.f}, {5170.f, 7356.f}, {6410.f, 4940.f}, {7570.f, 3831.f}, {8740.f, 2857.f}, {9510.f, 7231.f},
{4210.f, 3970.f}, {5236.f, 1260.f}, {6761.f, 4941.f}, {7521.f, 3832.f}, {8151.f, 2939.f}, {9170.f, 8520.f}, {3972.f, 7240.f}, {4840.f, 5207.f}, {6340.f, 9430.f}, {7150.f, 1800.f},
{8370.f, 5840.f}, {9210.f, 2970.f}, {1550.f, 4860.f}, {2860.f, 5940.f}, {3750.f, 8070.f}, {4941.f, 1520.f}, {5171.f, 7357.f}, {6950.f, 1430.f}, {7840.f, 3870.f}, {8461.f, 5220.f},
{9320.f, 1970.f}, {1860.f, 7511.f}, {2520.f, 3850.f}, {3741.f, 5641.f}, {5011.f, 7431.f}, {6141.f, 1698.f}, {7350.f, 2019.f}, {8462.f, 5950.f}, {9231.f, 4789.f}, {3972.f, 1540.f},
{5172.f, 7358.f}, {6411.f, 4941.f}, {7571.f, 3832.f}, {8741.f, 2858.f}, {9511.f, 7232.f}, {4211.f, 3971.f}, {5237.f, 1261.f}, {6762.f, 4942.f}, {7522.f, 3833.f}, {8152.f, 2940.f},
{9171.f, 8521.f}, {3973.f, 7241.f}, {4841.f, 5208.f}, {6341.f, 9431.f}, {7151.f, 1799.f}, {8371.f, 5841.f}, {9211.f, 2971.f}, {1551.f, 4861.f}, {2861.f, 5941.f}, {3751.f, 8071.f},
{4942.f, 1521.f}, {5173.f, 7359.f}, {6951.f, 1431.f}, {7841.f, 3871.f}, {8462.f, 5221.f}, {9321.f, 1971.f}, {1861.f, 7512.f}, {2521.f, 3851.f}, {3742.f, 5642.f}, {5012.f, 7432.f},
{6142.f, 1697.f}, {7351.f, 2018.f}, {8463.f, 5951.f}, {9232.f, 4788.f}, {3973.f, 1541.f}, {5174.f, 7360.f}, {6412.f, 4942.f}, {7572.f, 3833.f}, {8742.f, 2859.f}, {9512.f, 7233.f},
{4212.f, 3972.f}, {5238.f, 1262.f}, {6763.f, 4943.f}, {7523.f, 3834.f}, {8153.f, 2941.f}, {9172.f, 8522.f}, {3974.f, 7242.f}, {4842.f, 5209.f}, {6342.f, 9432.f}, {7152.f, 1798.f},
{8372.f, 5842.f}, {9212.f, 2972.f}, {1552.f, 4862.f}, {2862.f, 5942.f}, {3752.f, 8072.f}, {4943.f, 1522.f}, {5175.f, 7361.f}, {6952.f, 1432.f}, {7842.f, 3872.f}, {8463.f, 5222.f},
{9322.f, 1972.f}, {1862.f, 7513.f}, {2522.f, 3852.f}, {3743.f, 5643.f}, {5013.f, 7433.f}, {6143.f, 1696.f}, {7352.f, 2017.f}, {8464.f, 5952.f}, {9233.f, 4787.f}, {3974.f, 1542.f},
{5176.f, 7362.f}, {6413.f, 4943.f}, {7573.f, 3834.f}, {8743.f, 2860.f}, {9513.f, 7234.f}, {4213.f, 3973.f}, {5239.f, 1263.f}, {6764.f, 4944.f}, {7524.f, 3835.f}, {8154.f, 2942.f},
{9173.f, 8523.f}, {3975.f, 7243.f}, {4843.f, 5210.f}, {6343.f, 9433.f}, {7153.f, 1797.f}, {8373.f, 5843.f}, {9213.f, 2973.f}, {1553.f, 4863.f}, {2863.f, 5943.f}, {3753.f, 8073.f},
{4944.f, 1523.f}, {5177.f, 7363.f}, {6953.f, 1433.f}, {7843.f, 3873.f}, {8464.f, 5223.f}, {9323.f, 1973.f}, {1863.f, 7514.f}, {2523.f, 3853.f}, {3744.f, 5644.f}, {5014.f, 7434.f},
{6144.f, 1695.f}, {7353.f, 2016.f}, {8465.f, 5953.f}, {9234.f, 4786.f}, {3975.f, 1543.f}, {5178.f, 7364.f}, {6414.f, 4944.f}, {7574.f, 3835.f}, {8744.f, 2861.f}, {9514.f, 7235.f},
{4214.f, 3974.f}, {5240.f, 1264.f}, {6765.f, 4945.f}, {7525.f, 3836.f}, {8155.f, 2943.f}, {9174.f, 8524.f}, {3976.f, 7244.f}, {4844.f, 5211.f}, {6344.f, 9434.f}, {7154.f, 1796.f},
{8374.f, 5844.f}, {9214.f, 2974.f}, {1554.f, 4864.f}, {2864.f, 5944.f}, {3754.f, 8074.f}, {4945.f, 1524.f}, {5179.f, 7365.f}, {6954.f, 1434.f}, {7844.f, 3874.f}, {8465.f, 5224.f},
{9324.f, 1974.f}, {1864.f, 7515.f}, {2524.f, 3854.f}, {3745.f, 5645.f}, {5015.f, 7435.f}, {6145.f, 1694.f}, {7354.f, 2015.f}, {8466.f, 5954.f}, {9235.f, 4785.f}, {3976.f, 1544.f},
{5180.f, 7366.f}, {6415.f, 4945.f}, {7575.f, 3836.f}, {8745.f, 2862.f}, {9515.f, 7236.f}, {4215.f, 3975.f}, {5241.f, 1265.f}, {6766.f, 4946.f}, {7526.f, 3837.f}, {8156.f, 2944.f},
{9175.f, 8525.f}, {3977.f, 7245.f}, {4845.f, 5212.f}, {6345.f, 9435.f}, {7155.f, 1795.f}, {8375.f, 5845.f}, {9215.f, 2975.f}, {1555.f, 4865.f}, {2865.f, 5945.f}, {3755.f, 8075.f},
{4946.f, 1525.f}, {5181.f, 7367.f}, {6955.f, 1435.f}, {7845.f, 3875.f}, {8466.f, 5225.f}, {9325.f, 1975.f}, {1865.f, 7516.f}, {2525.f, 3855.f}, {3746.f, 5646.f}, {5016.f, 7436.f},
{6146.f, 1693.f}, {7355.f, 2014.f}, {8467.f, 5955.f}, {9236.f, 4784.f}, {3977.f, 1545.f}, {5182.f, 7368.f}, {6416.f, 4946.f}, {7576.f, 3837.f}, {8746.f, 2863.f}, {9516.f, 7237.f},
{4216.f, 3976.f}, {5242.f, 1266.f}, {6767.f, 4947.f}, {7527.f, 3838.f}, {8157.f, 2945.f}, {9176.f, 8526.f}, {3978.f, 7246.f}, {4846.f, 5213.f}, {6346.f, 9436.f}, {7156.f, 1794.f},
{8376.f, 5846.f}, {9216.f, 2976.f}, {1556.f, 4866.f}, {2866.f, 5946.f}, {3756.f, 8076.f}, {4947.f, 1526.f}, {5183.f, 7369.f}, {6956.f, 1436.f}, {7846.f, 3876.f}, {8467.f, 5226.f},
{9326.f, 1976.f}, {1866.f, 7517.f}, {2526.f, 3856.f}, {3747.f, 5647.f}, {5017.f, 7437.f}, {6147.f, 1692.f}, {7356.f, 2013.f}, {8468.f, 5956.f}
,{109.f, 516.f}, {804.f, 741.f}, {500.f, 381.f}, {702.f, 62.f}, {909.f, 741.f},
{1013.f, 71.f}, {1303.f, 20.f}, {4014.f, 59.f}, {2001.f, 48.f}, {1004.f, 73.f},
{319.f, 492.f}, {55.f, 318.f}, {782.f, 281.f}, {491.f, 702.f}, {19.f, 3900.f},
{221.f, 122.f}, {743.f, 492.f}, {510.f, 382.f}, {130.f, 290.f}, {151.f, 851.f},
{825.f, 51.f}, {312.f, 974.f}, {13.f, 1228.f}, {375.f, 58.f}, {219.f, 29.f},{1895.f, 956.f}, {7846.f, 749.f}, {7506.f, 383.f}, {7727.f, 626.f}, {1997.f, 741.f},
{137.f, 712.f}, {336.f, 203.f}, {442.f, 593.f}, {217.f, 480.f}, {144.f, 733.f},
{397.f, 492.f}, {557.f, 381.f}, {727.f, 284.f}, {497.f, 721.f}, {197.f, 395.f},
{223.f, 124.f}, {748.f, 492.f}, {508.f, 381.f}, {138.f, 292.f}, {157.f, 850.f},
{827.f, 519.f}, {327.f, 941.f}, {137.f, 181.f}, {357.f, 582.f}, {197.f, 295.f},
{537.f, 484.f}, {847.f, 592.f}, {737.f, 805.f}, {928.f, 150.f}, {937.f, 141.f},

        {4924.f, 1504.f}, {5134.f, 7324.f}, {6934.f, 1414.f}, {7824.f, 3853.f}, {8435.f, 5203.f}, {9303.f, 1953.f}, {1843.f, 7494.f}, {2503.f, 3833.f}, {3724.f, 5623.f}, {4994.f, 7414.f},
{6134.f, 1715.f}, {7333.f, 2036.f}, {8436.f, 5933.f}, {9214.f, 4806.f}, {3955.f, 1523.f}, {5139.f, 7324.f}, {6394.f, 4924.f}, {7554.f, 3815.f}, {8724.f, 2841.f}, {9494.f, 7215.f},
{4194.f, 3954.f}, {5220.f, 1244.f}, {6745.f, 4925.f}, {7505.f, 3816.f}, {8135.f, 2923.f}, {9154.f, 8504.f}, {3956.f, 7224.f}, {4824.f, 5191.f}, {6324.f, 9414.f}, {7134.f, 1816.f},
{8354.f, 5824.f}, {9194.f, 2954.f}, {1534.f, 4844.f}, {2844.f, 5924.f}, {3734.f, 8054.f}, {4925.f, 1504.f}, {5139.f, 7325.f}, {6934.f, 1414.f}, {7824.f, 3854.f}, {8437.f, 5204.f},
{9304.f, 1954.f}, {1844.f, 7495.f}, {2504.f, 3834.f}, {3725.f, 5624.f}, {4995.f, 7415.f}, {6135.f, 1714.f}, {7334.f, 2035.f}, {8438.f, 5934.f}, {9215.f, 4805.f}, {3956.f, 1524.f},
{5140.f, 7326.f}, {6395.f, 4925.f}, {7555.f, 3816.f}, {8725.f, 2842.f}, {9495.f, 7216.f}, {4195.f, 3955.f}, {5221.f, 1245.f}, {6746.f, 4926.f}, {7506.f, 3817.f}, {8136.f, 2924.f},
{9155.f, 8505.f}, {3957.f, 7225.f}, {4825.f, 5192.f}, {6325.f, 9415.f}, {7135.f, 1815.f}, {8355.f, 5825.f}, {9195.f, 2955.f}, {1535.f, 4845.f}, {2845.f, 5925.f}, {3735.f, 8055.f},
{4926.f, 1505.f}, {5141.f, 7327.f}, {6935.f, 1415.f}, {7825.f, 3855.f}, {8439.f, 5205.f}, {9305.f, 1955.f}, {1845.f, 7496.f}, {2505.f, 3835.f}, {3726.f, 5625.f}, {4996.f, 7416.f},
{6136.f, 1713.f}, {7335.f, 2034.f}, {8440.f, 5935.f}, {9216.f, 4804.f}, {3957.f, 1525.f}, {5142.f, 7328.f}, {6396.f, 4926.f}, {7556.f, 3817.f}, {8726.f, 2843.f}, {9496.f, 7217.f},
{4196.f, 3956.f}, {5222.f, 1246.f}, {6747.f, 4927.f}, {7507.f, 3818.f}, {8137.f, 2925.f}, {9156.f, 8506.f}, {3958.f, 7226.f}, {4826.f, 5193.f}, {6326.f, 9416.f}, {7136.f, 1814.f},
{8356.f, 5826.f}, {9196.f, 2956.f}, {1536.f, 4846.f}, {2846.f, 5926.f}, {3736.f, 8056.f}, {4927.f, 1506.f}, {5143.f, 7329.f}, {6936.f, 1416.f}, {7826.f, 3856.f}, {8441.f, 5206.f},
{9306.f, 1956.f}, {1846.f, 7497.f}, {2506.f, 3836.f}, {3727.f, 5626.f}, {4997.f, 7417.f}, {6137.f, 1712.f}, {7336.f, 2033.f}, {8442.f, 5936.f}, {9217.f, 4803.f}, {3958.f, 1526.f},
{5144.f, 7330.f}, {6397.f, 4927.f}, {7557.f, 3818.f}, {8727.f, 2844.f}, {9497.f, 7218.f}, {4197.f, 3957.f}, {5223.f, 1247.f}, {6748.f, 4928.f}, {7508.f, 3819.f}, {8138.f, 2926.f},
{9157.f, 8507.f}, {3959.f, 7227.f}, {4827.f, 5194.f}, {6327.f, 9417.f}, {7137.f, 1813.f}, {8357.f, 5827.f}, {9197.f, 2957.f}, {1537.f, 4847.f}, {2847.f, 5927.f}, {3737.f, 8057.f},
{4928.f, 1507.f}, {5145.f, 7331.f}, {6937.f, 1417.f}, {7827.f, 3857.f}, {8443.f, 5207.f}, {9307.f, 1957.f}, {1847.f, 7498.f}, {2507.f, 3837.f}, {3728.f, 5627.f}, {4998.f, 7418.f},
{6138.f, 1711.f}, {7337.f, 2032.f}, {8444.f, 5937.f}, {9218.f, 4802.f}, {3959.f, 1527.f}, {5146.f, 7332.f}, {6398.f, 4928.f}, {7558.f, 3819.f}, {8728.f, 2845.f}, {9498.f, 7219.f},
{4198.f, 3958.f}, {5224.f, 1248.f}, {6749.f, 4929.f}, {7509.f, 3820.f}, {8139.f, 2927.f}, {9158.f, 8508.f}, {3960.f, 7228.f}, {4828.f, 5195.f}, {6328.f, 9418.f}, {7138.f, 1812.f},
{8358.f, 5828.f}, {9198.f, 2958.f}, {1538.f, 4848.f}, {2848.f, 5928.f}, {3738.f, 8058.f}, {4929.f, 1508.f}, {5147.f, 7333.f}, {6938.f, 1418.f}, {7828.f, 3858.f}, {8445.f, 5208.f},
{9308.f, 1958.f}, {1848.f, 7499.f}, {2508.f, 3838.f}, {3729.f, 5628.f}, {4999.f, 7419.f}, {6139.f, 1710.f}, {7338.f, 2031.f}, {8446.f, 5938.f}, {9219.f, 4801.f}, {3960.f, 1528.f},
{5148.f, 7334.f}, {6399.f, 4929.f}, {7559.f, 3820.f}, {8729.f, 2846.f}, {9499.f, 7220.f}, {4199.f, 3959.f}, {5225.f, 1249.f}, {6750.f, 4930.f}, {7510.f, 3821.f}, {8140.f, 2928.f},
{9159.f, 8509.f}, {3961.f, 7229.f}, {4829.f, 5196.f}, {6329.f, 9419.f}, {7139.f, 1811.f}, {8359.f, 5829.f}, {9199.f, 2959.f}, {1539.f, 4849.f}, {2849.f, 5929.f}, {3739.f, 8059.f},
{4930.f, 1509.f}, {5149.f, 7335.f}, {6939.f, 1419.f}, {7829.f, 3859.f}, {8447.f, 5209.f}, {9309.f, 1959.f}, {1849.f, 7500.f}, {2509.f, 3839.f}, {3730.f, 5629.f}, {5000.f, 7420.f},
{6140.f, 1709.f}, {7339.f, 2030.f}, {8448.f, 5939.f}, {9220.f, 4800.f}, {3961.f, 1529.f}, {5150.f, 7336.f}, {6400.f, 4930.f}, {7560.f, 3821.f}, {8730.f, 2847.f}, {9500.f, 7221.f},
{4200.f, 3960.f}, {5226.f, 1250.f}, {6751.f, 4931.f}, {7511.f, 3822.f}, {8141.f, 2929.f}, {9160.f, 8510.f}, {3962.f, 7230.f}, {4830.f, 5197.f}, {6330.f, 9420.f}, {7140.f, 1810.f},
{8360.f, 5830.f}, {9200.f, 2960.f}, {1540.f, 4850.f}, {2850.f, 5930.f}, {3740.f, 8060.f}, {4931.f, 1510.f}, {5151.f, 7337.f}, {6940.f, 1420.f}, {7830.f, 3860.f}, {8449.f, 5210.f},
{9310.f, 1960.f}, {1850.f, 7501.f}, {2510.f, 3840.f}, {3731.f, 5630.f}, {5001.f, 7421.f}, {6141.f, 1708.f}, {7340.f, 2029.f}, {8450.f, 5940.f}, {9221.f, 4799.f}, {3962.f, 1530.f},
{5152.f, 7338.f}, {6401.f, 4931.f}, {7561.f, 3822.f}, {8731.f, 2848.f}, {9501.f, 7222.f}, {4201.f, 3961.f}, {5227.f, 1251.f}, {6752.f, 4932.f}, {7512.f, 3823.f}, {8142.f, 2930.f},
{9161.f, 8511.f}, {3963.f, 7231.f}, {4831.f, 5198.f}, {6331.f, 9421.f}, {7141.f, 1809.f}, {8361.f, 5831.f}, {9201.f, 2961.f}, {1541.f, 4851.f}, {2851.f, 5931.f}, {3741.f, 8061.f},
{4932.f, 1511.f}, {5153.f, 7339.f}, {6941.f, 1421.f}, {7831.f, 3861.f}, {8451.f, 5211.f}, {9311.f, 1961.f}, {1851.f, 7502.f}, {2511.f, 3841.f}, {3732.f, 5631.f}, {5002.f, 7422.f},
{6142.f, 1707.f}, {7341.f, 2028.f}, {8452.f, 5941.f}, {9222.f, 4798.f}, {3963.f, 1531.f}, {5154.f, 7340.f}, {6402.f, 4932.f}, {7562.f, 3823.f}, {8732.f, 2849.f}, {9502.f, 7223.f},
{4202.f, 3962.f}, {5228.f, 1252.f}, {6753.f, 4933.f}, {7513.f, 3824.f}, {8143.f, 2931.f}, {9162.f, 8512.f}, {3964.f, 7232.f}, {4832.f, 5199.f}, {6332.f, 9422.f}, {7142.f, 1808.f},
{8362.f, 5832.f}, {9202.f, 2962.f}, {1542.f, 4852.f}, {2852.f, 5932.f}, {3742.f, 8062.f}, {4933.f, 1512.f}, {5155.f, 7341.f}, {6942.f, 1422.f}, {7832.f, 3862.f}, {8452.f, 5212.f},
{9312.f, 1962.f}, {1852.f, 7503.f}, {2512.f, 3842.f}, {3733.f, 5632.f}, {5003.f, 7423.f}, {6143.f, 1706.f}, {7342.f, 2027.f}, {8453.f, 5942.f}, {9223.f, 4797.f}, {3964.f, 1532.f},
{5156.f, 7342.f}, {6403.f, 4933.f}, {7563.f, 3824.f}, {8733.f, 2850.f}, {9503.f, 7224.f}, {4203.f, 3963.f}, {5229.f, 1253.f}, {6754.f, 4934.f}, {7514.f, 3825.f}, {8144.f, 2932.f},
{9163.f, 8513.f}, {3965.f, 7233.f}, {4833.f, 5200.f}, {6333.f, 9423.f}, {7143.f, 1807.f}, {8363.f, 5833.f}, {9203.f, 2963.f}, {1543.f, 4853.f}, {2853.f, 5933.f}, {3743.f, 8063.f},
{4934.f, 1513.f}, {5157.f, 7343.f}, {6943.f, 1423.f}, {7833.f, 3863.f}, {8454.f, 5213.f}, {9313.f, 1963.f}, {1853.f, 7504.f}, {2513.f, 3843.f}, {3734.f, 5633.f}, {5004.f, 7424.f},
{6144.f, 1705.f}, {7343.f, 2026.f}, {8455.f, 5943.f}, {9224.f, 4796.f}, {3965.f, 1533.f}, {5158.f, 7344.f}, {6404.f, 4934.f}, {7564.f, 3825.f}, {8734.f, 2851.f}, {9504.f, 7225.f},
{4204.f, 3964.f}, {5230.f, 1254.f}, {6755.f, 4935.f}, {7515.f, 3826.f}, {8145.f, 2933.f}, {9164.f, 8514.f}, {3966.f, 7234.f}, {4834.f, 5201.f}, {6334.f, 9424.f}, {7144.f, 1806.f},
{8364.f, 5834.f}, {9204.f, 2964.f}, {1544.f, 4854.f}, {2854.f, 5934.f}, {3744.f, 8064.f}, {4935.f, 1514.f}, {5159.f, 7345.f}, {6944.f, 1424.f}, {7834.f, 3864.f}, {8455.f, 5214.f},
{9314.f, 1964.f}, {1854.f, 7505.f}, {2514.f, 3844.f}, {3735.f, 5634.f}, {5005.f, 7425.f}, {6145.f, 1704.f}, {7344.f, 2025.f}, {8456.f, 5944.f}, {9225.f, 4795.f}, {3966.f, 1534.f},
{5160.f, 7346.f}, {6405.f, 4935.f}, {7565.f, 3826.f}, {8735.f, 2852.f}, {9505.f, 7226.f}, {4205.f, 3965.f}, {5231.f, 1255.f}, {6756.f, 4936.f}, {7516.f, 3827.f}, {8146.f, 2934.f},
{9165.f, 8515.f}, {3967.f, 7235.f}, {4835.f, 5202.f}, {6335.f, 9425.f}, {7145.f, 1805.f}, {8365.f, 5835.f}, {9205.f, 2965.f}, {1545.f, 4855.f}, {2855.f, 5935.f}, {3745.f, 8065.f},
{4936.f, 1515.f}, {5161.f, 7347.f}, {6945.f, 1425.f}, {7835.f, 3865.f}, {8456.f, 5215.f}, {9315.f, 1965.f}, {1855.f, 7506.f}, {2515.f, 3845.f}, {3736.f, 5635.f}, {5006.f, 7426.f},
{6146.f, 1703.f}, {7345.f, 2024.f}, {8457.f, 5945.f}, {9226.f, 4794.f}, {3967.f, 1535.f}, {5162.f, 7348.f}, {6406.f, 4936.f}, {7566.f, 3827.f}, {8736.f, 2853.f}, {9506.f, 7227.f},
{4206.f, 3966.f}, {5232.f, 1256.f}, {6757.f, 4937.f}, {7517.f, 3828.f}, {8147.f, 2935.f}, {9166.f, 8516.f}, {3968.f, 7236.f}, {4836.f, 5203.f}, {6336.f, 9426.f}, {7146.f, 1804.f},
{8366.f, 5836.f}, {9206.f, 2966.f}, {1546.f, 4856.f}, {2856.f, 5936.f}, {3746.f, 8066.f}, {4937.f, 1516.f}, {5163.f, 7349.f}, {6946.f, 1426.f}, {7836.f, 3866.f}, {8457.f, 5216.f},
{9316.f, 1966.f}, {1856.f, 7507.f}, {2516.f, 3846.f}, {3737.f, 5636.f}, {5007.f, 7427.f}, {6147.f, 1702.f}, {7346.f, 2023.f}, {8458.f, 5946.f}, {9227.f, 4793.f}, {3968.f, 1536.f},
{5164.f, 7350.f}, {6407.f, 4937.f}, {7567.f, 3828.f}, {8737.f, 2854.f}, {9507.f, 7228.f}, {4207.f, 3967.f}, {5233.f, 1257.f}, {6758.f, 4938.f}, {7518.f, 3829.f}, {8148.f, 2936.f},
{9167.f, 8517.f}, {3969.f, 7237.f}, {4837.f, 5204.f}, {6337.f, 9427.f}, {7147.f, 1803.f}, {8367.f, 5837.f}, {9207.f, 2967.f}, {1547.f, 4857.f}, {2857.f, 5937.f}, {3747.f, 8067.f},
{4938.f, 1517.f}, {5165.f, 7351.f}, {6947.f, 1427.f}, {7837.f, 3867.f}, {8458.f, 5217.f}, {9317.f, 1967.f}, {1857.f, 7508.f}, {2517.f, 3847.f}, {3738.f, 5637.f}, {5008.f, 7428.f},
{6148.f, 1701.f}, {7347.f, 2022.f}, {8459.f, 5947.f}, {9228.f, 4792.f}, {3969.f, 1537.f}, {5166.f, 7352.f}, {6408.f, 4938.f}, {7568.f, 3829.f}, {8738.f, 2855.f}, {9508.f, 7229.f},
{4208.f, 3968.f}, {5234.f, 1258.f}, {6759.f, 4939.f}, {7519.f, 3830.f}, {8149.f, 2937.f}, {9168.f, 8518.f}, {3970.f, 7238.f}, {4838.f, 5205.f}, {6338.f, 9428.f}, {7148.f, 1802.f},
{8368.f, 5838.f}, {9208.f, 2968.f}, {1548.f, 4858.f}, {2858.f, 5938.f}, {3748.f, 8068.f}, {4939.f, 1518.f}, {5167.f, 7353.f}, {6948.f, 1428.f}, {7838.f, 3868.f}, {8459.f, 5218.f},
{9318.f, 1968.f}, {1858.f, 7509.f}, {2518.f, 3848.f}, {3739.f, 5638.f}, {5009.f, 7429.f}, {6149.f, 1700.f}, {7348.f, 2021.f}, {8460.f, 5948.f}, {9229.f, 4791.f}, {3970.f, 1538.f},
{5168.f, 7354.f}, {6409.f, 4939.f}, {7569.f, 3830.f},
 {446, 6614}, {4695, 3041}, {8836, 8476}, {4316, 70}, {9151, 6056},
    {6555, 8834}, {3783, 6723}, {6368, 8918}, {8287, 4969}, {6660, 8366},
    {9630, 3161}, {4680, 4582}, {263, 691}, {7603, 2126}, {211, 7562},
    {8422, 8853}, {9395, 7915}, {6494, 7989}, {9614, 9170}, {567, 9960},
    {9420, 8770}, {196, 6073}, {2909, 7716}, {6918, 7596}, {6170, 4135},
    {9549, 5766}, {4876, 7306}, {9181, 7631}, {4528, 6760}, {979, 5964},
    {6695, 7600}, {9213, 1173}, {985, 7217}, {1306, 9743}, {5913, 2633},
    {582, 5787}, {3141, 3393}, {4451, 4145}, {7480, 9973}, {4011, 5748},
    {2851, 6901}, {8712, 8346}, {3409, 3327}, {4767, 3399}, {3395, 8676},
    {9607, 6463}, {1794, 6167}, {5292, 2992}, {9857, 9557}, {3341, 3748},
    {8683, 113}, {306, 2343}, {7352, 9381}, {1170, 3301}, {6399, 4255},
    {1856, 8539}, {3907, 3493}, {3393, 141}, {4636, 4570}, {5330, 3957},
    {9999, 4195}, {682, 6167}, {7929, 4975}, {452, 963}, {8834, 3626},
    {859, 6857}, {1055, 3898}, {4197, 3224}, {3674, 8685}, {1581, 6931},
    {184, 5553}, {8441, 6632}, {5775, 8535}, {7294, 4813}, {7157, 8646},
    {4738, 1870}, {5701, 2271}, {7753, 5764}, {9907, 8863}, {1761, 5857},
    {5044, 213}, {9074, 3570}, {5949, 8028}, {929, 480}, {8350, 5041},
    {5585, 8283}, {5261, 3958}, {9493, 1520}, {9199, 5923}, {3087, 3268},
    {6789, 8427}, {2628, 4932}, {482, 2226}, {7361, 2435}, {9505, 5831},
    {5407, 2533}, {5867, 3142}, {2124, 4248}, {4607, 5676}, {3862, 9629},
    {5238, 5610}, {6007, 8237}, {5847, 9690}, {3833, 9925}, {1899, 9687},
    {1867, 6799}, {2172, 115}, {8413, 5374}, {5587, 8168}, {3901, 4380},
    {7889, 3091}, {2079, 5541}, {5987, 5030}, {3359, 6147}, {4651, 47},
    {1536, 8706}, {9819, 9480}, {9750, 1594}, {1466, 5107}, {338, 7666},
    {2199, 2318}, {7106, 406}, {1321, 1731}, {1952, 312}, {6002, 6028},
    {897, 8606}, {7106, 3347}, {2715, 817}, {17, 8990}, {2926, 5163},
    {1261, 8072}, {5188, 5075}, {6842, 5151}, {7411, 1827}, {6128, 1089},
    {8903, 4677}, {6521, 2951}, {5867, 8839}, {4567, 7210}, {7912, 3812},
    {1153, 6018}, {3228, 7223}, {9050, 8055}, {4482, 9310}, {9561, 764},
    {4907, 5797}, {2323, 3313}, {231, 5226}, {8658, 1804}, {644, 3427},
    {1316, 2039}, {3611, 9998}, {1727, 2221}, {1145, 7950}, {3470, 2621},
    {8096, 8731}, {5202, 6723}, {5935, 8069}, {4567, 9160}, {2460, 564},
    {4797, 1698}, {2965, 4081}, {4079, 3315}, {7756, 8812}, {4591, 2362},
    {6707, 3886}, {3464, 1972}, {3561, 5430}, {3895, 2908}, {4973, 1912},
    {7272, 5533}, {3296, 7633}, {7482, 6011}, {973, 7453}, {7033, 9318},
    {8203, 4096}, {9177, 6006}, {9631, 2167}, {5609, 2264}, {2139, 5588},
    {8548, 5905}, {1384, 1603}, {7191, 1844}, {3837, 5939}, {2077, 8705},
    {3737, 6493}, {5484, 2882}, {2002, 8260}, {3376, 7748}, {6645, 6007},
    {106, 4237}, {2188, 8168}, {1725, 2718}, {7853, 5586}, {2067, 7813},
    {2123, 7381}, {3506, 7818}, {3029, 4066}, {670, 6606}, {4621, 8777},
    {1165, 8922}, {1294, 1075}, {2402, 2411}, {7308, 9961}, {2681, 1488},
    {3548, 980}, {7936, 3724}, {9146, 5194}, {3262, 6264}, {4935, 2412},
    {2553, 3994}, {1933, 7999}, {2613, 2273}, {6600, 8996}, {5203, 7024},
    {1661, 9232}, {442, 9939}, {1730, 3920}, {2258, 9960}, {9740, 7817},
    {5204, 1645}, {2480, 3839}, {9917, 9619}, {2975, 5673}, {8298, 5596},
    {3935, 9814}, {2175, 262}, {7959, 204}, {7928, 1100}, {7054, 669},
    {2121, 6577}, {190, 630}, {8041, 3856}, {9875, 5804}, {4462, 4108},
    {9699, 1075}, {3185, 9865}, {3724, 4071}, {6419, 627}, {5839, 9388},
    {3728, 3208}, {9661, 1911}, {4271, 2490}, {3866, 6779}, {5320, 6612},
    {1808, 1604}, {6401, 5550}, {2120, 7056}, {969, 290}, {4843, 5490},
    {3226, 2588}, {2938, 9065}, {12, 8953}, {2339, 1551}, {5281, 2287},
{7932, 1241}, {190, 4530}, {4127, 2273}, {540, 7711}, {4608, 2735},
{2888, 9898}, {5262, 3721}, {5706, 6547}, {2662, 5696}, {5551, 2813},
{214, 824}, {9346, 5557}, {4765, 4765}, {867, 5652}, {6096, 2358},
{3658, 5793}, {678, 9012}, {2738, 6796}, {5707, 1551}, {9091, 4746},
{8518, 2795}, {3787, 3629}, {6677, 7147}, {4317, 6068}, {5495, 6988},
{8045, 4681}, {3416, 3832}, {193, 6814}, {7022, 9330}, {1567, 6619},
{7087, 6766}, {9922, 6934}, {8745, 7919}, {6388, 3435}, {7399, 3627},
{3193, 8070}, {9089, 2598}, {4321, 5335}, {8401, 6741}, {4129, 4414},
{2390, 1266}, {5347, 3249}, {8520, 822}, {6848, 9852}, {278, 3299},
{1881, 6387}, {2943, 9145}, {5766, 3564}, {324, 7237}, {8489, 6284},
{9331, 3241}, {7150, 5260}, {8502, 3559}, {7888, 5982}, {4829, 942},
{3179, 5583}, {6501, 5327}, {7566, 776}, {2625, 9617}, {3737, 2588},
{6955, 968}, {6258, 1135}, {8454, 3418}, {4041, 4327}, {5306, 1951},
{7560, 8784}, {3834, 6946}, {7193, 2095}, {1009, 5886}, {8889, 3751},
{4111, 1581}, {9882, 9252}, {9863, 1449}, {3830, 8835}, {5181, 6531},
{6057, 2163}, {3876, 559}, {9252, 931}, {3531, 1881}, {6715, 9926},
{4133, 1418}, {6896, 3095}, {2991, 8011}, {8223, 3393}, {2415, 3253},
{7751, 8169}, {982, 2735}, {6117, 7847}, {9009, 6835}, {6493, 4036},
{2174, 2669}, {3302, 8685}, {4045, 1941}, {5533, 7335}, {1802, 9011},
{2281, 6903}, {5254, 5342}, {1223, 574}, {2692, 4886}, {7272, 4423},
{5221, 7856}, {6087, 4779}, {8391, 7273}, {2571, 9896} });

    mapa.creacion(std::move(crearTumba1));//Decoración con tumbas
    mapa.crearelemento({ {7892, 3459}, {1237, 6274}, {4863, 2389}, {9654, 1321}, {7021, 5760}, {5486, 8059}, {8493, 7284}, {3279, 6167}, {2670, 912}, {6137, 2455}, {2481, 6743},
    {852, 9583}, {2761, 4395}, {5784, 2849}, {7812, 6000}, {6187, 2097}, {4512, 4738}, {5001, 2871}, {5894, 1745}, {4625, 3879}, {2396, 7404}, {6804, 1302}, {2921, 8345},
    {5038, 6521}, {7551, 3245}, {8129, 9437}, {1782, 7923}, {3621, 1849}, {2493, 5093}, {6152, 7614}, {9038, 4327}, {4675, 6891}, {1759, 8273}, {5482, 6213}, {928, 8084},
    {5947, 5043}, {2758, 3291}, {7218, 8497}, {3526, 4995}, {8307, 1976}, {2894, 9273}, {7723, 5108}, {5921, 2862}, {1236, 7934}, {7513, 3548}, {2438, 5719}, {5396, 9254},
    {8847, 2348}, {9671, 6102}, {8492, 7326}, {6213, 5834}, {4138, 7835}, {3942, 6781}, {4705, 1428}, {6139, 5097}, {3276, 4359}, {9346, 8247}, {3158, 7281}, {7158, 6243},
    {8374, 1946}, {4089, 8931}, {1756, 7642}, {2819, 9153}, {1942, 7598}, {8476, 1537}, {5127, 5672}, {9203, 1358}, {6012, 6297}, {1835, 9321}, {9291, 8295}, {6409, 1847},
    {5248, 3047}, {4817, 2438}, {1085, 8319}, {7236, 6125}, {8762, 5408}, {8015, 2679}, {3684, 7901}, {7034, 4920}, {3182, 7862}, {4927, 5205}, {4271, 9138}, {7801, 6354},
    {3956, 5093}, {2109, 6081}, {7184, 2348}, {6817, 5293}, {8029, 5439}, {4395, 9716}, {2948, 1239}, {8417, 3157}, {684, 9057}, {9458, 3604}, {4563, 2894}, {2734, 4978},
    {3196, 8049}, {4732, 2984}, {8513, 6847}, {7309, 2537}, {7008, 8971}, {7461, 1398}, {8465, 3094}, {3815, 9283}, {6087, 1979}, {5713, 6482}, {3892, 4715}, {5281, 7260},
    {7081, 3694}, {1036, 8496}, {7394, 5187}, {4062, 6813}, {7852, 4094}, {1928, 7461}, {9517, 3467}, {809, 7402}, {8431, 5789}, {5230, 3198}, {6094, 2172}, {3765, 9521},
    {7293, 4824}, {48, 1274}, {5189, 6732}, {695, 1578}, {6249, 5137}, {2843, 9618}, {1873, 3594}, {4526, 8904}, {7238, 4035}, {1381, 9262}, {9613, 6397}, {4704, 3569},
    {7194, 4987}, {9030, 4394}, {8547, 1035}, {4827, 2745}, {6745, 3847}, {2046, 8704}, {2147, 6897}, {7592, 2403}, {3514, 1971}, {1067, 5023}, {8016, 6891}, {1753, 8196},
    {9128, 1493}, {5876, 5391}, {3721, 2843}, {8106, 4628}, {5309, 9325}, {1463, 6084}, {4278, 4985}, {3920, 6738}, {7348, 2837}, {2103, 9348}, {3029, 1943}, {6528, 6271},
    {9508, 1521}, {2, 2748}, {4215, 3698}, {7468, 6782}, {5389, 7036}, {1382, 4675}, {6095, 7921}, {9204, 2456}, {2478, 9173}, {5731, 6027}, {6487, 1738}, {2107, 6793},
    {7521, 2813}, {2871, 9728}, {9865, 3017}, {9021, 1096}, {5874, 6728}, {1374, 4729}, {6834, 1347}, {4018, 6213}, {2051, 7234}, {8104, 2901}, {7403, 5062}, {4729, 6274},
    {3953, 2106}, {2748, 3401}, {5971, 1879}, {9357, 9247}, {1348, 7162}, {7421, 4981}, {8248, 5132}, {1562, 6827}, {6521, 4318}, {2749, 8396}, {4308, 9073}, {7043, 5374},
    {6091, 9347}, {532, 2743}, {7018, 5128}, {8427, 6245}, {2485, 3402}, {5942, 8041}, {2394, 7256}, {7982, 1863}, {5319, 5173}, {2847, 3694}, {8013, 9358}, {3261, 2981},
    {4576, 5107}, {9052, 2367}, {7123, 6195}, {1928, 7601}, {5647, 2345}, {2987, 4987}, {5398, 4831}, {1427, 2953}, {3651, 1875}, {6128, 5436}, {705, 8035}, {4738, 1608},
    {3016, 4129}, {6721, 1274}, {2416, 8497}, {8910, 4573}, {1479, 7829}, {3201, 1827}, {9847, 5249}, {8294, 2935}, {6921, 1374}, {3471, 9523}, {6589, 6710}, {3812, 4057},
    {4721, 5930}, {7069, 5284}, {4137, 3621}, {6984, 5106}, {8165, 1426}, {9268, 5147}, {2573, 3046}, {9782, 5926}, {1604, 1043}, {1459, 1834}, {3657, 6938}, {1086, 7314},
    {2047, 6817}, {8317, 2856}, {6097, 4925}, {2345, 4028}, {7648, 1402}, {5408, 2396}, {7025, 9371}, {1609, 2718}, {4032, 7137}, {6891, 2385}, {5273, 1734}, {4168, 7985},
    {1032, 7047}, {9145, 2952}, {7523, 4128}, {512, 1049}, {6983, 9345}, {2157, 2834}, {1746, 7843}, {3281, 3726}, {5213, 7269}, {4501, 9418}, {7916, 3248}, {2897, 1745},
    {25, 1804}, {9032, 7389}, {2951, 9473}, {8359, 2984}, {5834, 6145}, {6294, 7042}, {4513, 3892}, {414, 8203}, {7253, 1904}, {1843, 3617}, {3209, 7024}, {5913, 8402},
    {8275, 1207}, {4309, 3154}, {9516, 4291}, {6895, 5307}, {2745, 8317}, {6125, 7382}, {2874, 1945}, {5032, 7846}, {4198, 7261}, {1385, 6172}, {7047, 1381}, {8264, 2931},
    {4518, 4068}, {6301, 5102}, {57, 7374}, {7826, 5401}, {9738, 3748}, {5192, 8935}, {1681, 4753}, {4017, 5286}, {6351, 3948}, {5084, 5298}, {2749, 8031}, {6193, 1748},
    {9015, 3921}, {2314, 6083}, {5791, 8714}, {3615, 2987}, {7243, 1278}, {2049, 8725}, {4819, 1403}, {7016, 2387}, {4593, 5034}, {9374, 6849}, {3842, 1093}, {1485, 8243},
    {9105, 2743}, {3072, 6514}, {8193, 4257}, {2574, 5321}, {6785, 1056}, {7032, 8307}, {5892, 1843}, {5218, 2497}, {3625, 9387}, {4925, 1748}, {9107, 1354}, {1859, 9745},
    {4093, 7128}, {9514, 5028}, {5184, 2016}, {2741, 3024}, {8916, 5183}, {5382, 6104}, {1408, 9213}, {6419, 2705}, {3786, 1273}, {5721, 6189}, {4827, 5012}, {9147, 2938},
    {5271, 7291}, {3948, 6014}, {2876, 4816}, {6083, 3916}, {3512, 2096}, {7853, 5201}, {6901, 3029}, {3294, 7385}, {8407, 2841}, {2378, 6184}, {7102, 5814}, {6017, 7028},
    {5173, 8274}, {4038, 5917}, {3524, 2186}, {7191, 7365}, {9403, 1743}, {5201, 8724}, {1487, 2904}, {6279, 1841}, {1581, 4018}, {9134, 2056}, {5194, 8724}, {3701, 9182},
    {1461, 2841}, {5714, 1743}, {9421, 6829}, {5307, 2374}, {1586, 7041}, {9132, 1743}, {5214, 8927}, {1482, 4096}, {3724, 5028}, {1579, 8203}, {5734, 7285}, {4037, 1297},
    {2403, 5872}, {3791, 9318}, {5123, 2894}, {6401, 2847}, {2308, 5029}, {6218, 1743}, {3752, 4897}, {5297, 7243}, {1407, 2984}, {4924, 6723}, {3901, 8374}, {7014, 2918},
    {1483, 4238}, {6732, 2951}, {2106, 5897}, {5208, 2784}, {6913, 1207}, {1507, 4985}, {7123, 6309}, {9401, 1276}, {1453, 3714}, {6183, 7234}, {924, 9098}, {7309, 8306},
    {3058, 4719}, {7458, 1504}, {8361, 1984}, {4062, 7284}, {1738, 6897}, {6895, 2406}, {8329, 2058}, {5197, 8354}, {9274, 2073}, {1837, 7493}, {2401, 7319}, {3824, 4897},
    {5304, 3248}, {8318, 6149}, {2473, 5827}, {6013, 1947}, {5298, 5078}, {2016, 8327}, {6843, 1924}, {3794, 8238}, {2403, 7217}, {5829, 1907}, {2741, 6029}, {9018, 7358},
    {2749, 1908}, {6204, 4817}, {7894, 2301}, {1408, 7294}, {3647, 8421}, {4719, 2074}, {5803, 1937}, {2947, 8403}, {5284, 2308}, {6418, 9234}, {3916, 8304}, {5302, 1731},
    {8234, 1742}, {9028, 5817}, {3701, 1934}, {2408, 2981}, {5893, 9327}, {3107, 2743}, {5027, 8096}, {7025, 5829}, {2401, 9027}, {6293, 1273}, {4819, 9371}, {4702, 2371},
    {5191, 3284}, {9204, 2317}, {3087, 5832}, {8274, 1743}, {5203, 6718}, {1403, 5294}, {3181, 4938}, {5274, 1984}, {2734, 8402}, {5816, 4972}, {2083, 8294}, {7419, 8402},
    {5283, 2018}, {1401, 872}, {7038, 2308}, {5297, 8304}, {6108, 2837}, {3947, 2731}, {2406, 4289}, {1403, 8017}, {4083, 6729}, {5214, 2837}, {2097, 2804}, {3276, 3891},
    {1483, 9024}, {2401, 1028}, {4897, 4872}, {3217, 9402}, {6401, 1873}, {8209, 3719}, {5208, 3294}, {3821, 2791}, {1743, 8297}, {2301, 3487}, {1028, 5913}, {8096, 3794},
    {4817, 1923}, {2907, 5238}, {5782, 8274}, {2914, 2743},  {2983, 1724}, {4817, 2093}, {5098, 7294}, {1034, 2918}, {4031, 8791}, {5891, 8304},
    {7293, 2934}, {2184, 1782}, {7218, 1031}, {3894, 1403}, {2379, 8924}, {1283, 2739}, {8401, 5214}, {2037, 1203}, {2319, 2943}, {7214, 2394}, {4897, 2382}, {1834, 4021},
    {7301, 2934}, {1097, 428}, {5813, 3029}, {1408, 3897}, {5934, 8014}, {2894, 1428}, {7201, 2837}, {2309, 5201}, {6921, 2874}, {4983, 8923}, {2874, 2403}, {8301, 5297},
    {2403, 5097}, {7298, 2304}, {3084, 4018}, {1203, 4017}, {2934, 8218}, {4728, 2382}, {4897, 1938}, {1783, 5298}, {7248, 4816}, {1403, 3027}, {2403, 3094}, {6724, 2907},
    {7293, 2018}, {8921, 3094}, {93, 8374}, {7029, 1203}, {3824, 5097}, {2904, 4092}, {1827, 5094}, {2384, 4017}, {7218, 2904}, {321, 8894}, {2834, 4032}, {5097, 4201},
    {1724, 5934}, {2804, 2934}, {2918, 7182}, {2894, 3024}, {1297, 907}, {8391, 2849}, {1203, 5917}, {2891, 5294}, {7213, 1397}, {2981, 8403}, {2017, 3149}, {7213, 4732},
    {8927, 2803}, {1304, 9101}, {2894, 7201}, {2371, 4328}, {31, 5801}, {3084, 7218}, {3907, 1324}, {2874, 1283}, {2849, 4702}, {2017, 5201}, {4897, 7213}, {2018, 4897},
    {2389, 1824}, {3248, 1783}, {4872, 1784}, {1403, 2734}, {2401, 2783}, {2384, 2091}, {5028, 1034}, {3721, 1403}, {4901, 4872}, {4021, 3087}, {1031, 4017}, {2374, 7291},
    {1034, 8904}, {2918, 7234}, {4902, 3094}, {1824, 1873}, {1031, 8904}, {3017, 2891}, {1403, 2803}, {2017, 2874}, {2734, 2803}, {7218, 4017}, {1827, 8923}, {4872, 4203},
    {3027, 3029}, {2918, 2894}, {2734, 2918}, {3827, 3094}, {3094, 4021}, {4732, 7214}, {1031, 8804}, {2379, 7204}, {4021, 4817}, {4021, 1938}, {7218, 4872}, {3721, 2891},
    {2017, 1408}, {2016, 3094}, {3094, 2018}, {1723, 2907}, {7214, 4738}, {2891, 1034}, {1408, 4032}, {1784, 6018}, {2907, 4817}, {4721, 3029}, {7213, 2094}, {3084, 4728},
    {2824, 4824}, {7204, 2894}, {1293, 4729}, {7213, 1827}, {1824, 1324}, {2918, 4716}, {2914, 1734}, {1031, 3094}, {3029, 4824}, {4872, 4897}, {7218, 3024}, {3017, 7214},
    {4732, 1203}, {7214, 1783}, {2094, 4872}, {2724, 1034}, {7204, 4017}, {2028, 7213}, {2918, 4872}, {1408, 3094}, {3721, 4721}, {4872, 1324}, {2734, 3029}, {4902, 2874},
    {1834, 9094}, {2017, 1324}, {3027, 2927}, {2017, 1321}, {3024, 2094}, {7218, 2017}, {3024, 1824}, {2734, 7213}, {31, 1408}, {2406, 3907}, {1094, 9024}, {5031, 8018},
    {2017, 3024}, {7218, 2094}, {1408, 6024}, {3094, 3027}, {7213, 1034}, {2028, 1324}, {7218, 2907}, {2027, 7213}, {7218, 4824}, {2803, 3017}, {7218, 3024} });

    mapa.creacion(std::move(crearTumba2));
    mapa.crearelemento({

        {220.f, 0.f}, {520.f, 50.f }, {820.f, 0.f}, {823.f, 10.f},{1200.f, 0.f},
        { 1180.f, 10.f }, {1220.f, 10.f}, {2349.f, 9834.f}, {6551.f, 1209.f}, {1903.f, 7872.f}, {8734.f, 4902.f}, {3457.f, 6238.f}, {7290.f, 8456.f}, {5134.f, 2234.f}, {8612.f, 6720.f},
    {1278.f, 9432.f}, {4532.f, 5830.f}, {9081.f, 4723.f}, {6712.f, 2312.f}, {3940.f, 8904.f}, {7201.f, 6135.f}, {8231.f, 5204.f}, {2583.f, 3987.f}, {9403.f, 7401.f}, {6842.f, 1532.f},
    {3129.f, 8302.f}, {5731.f, 2018.f}, {1482.f, 7459.f}, {8154.f, 6423.f}, {9285.f, 5082.f}, {4923.f, 1756.f}, {2610.f, 8209.f}, {7523.f, 3614.f}, {1098.f, 9593.f}, {6341.f, 2712.f},
    {8423.f, 3129.f}, {7892.f, 6820.f}, {4539.f, 5471.f}, {1973.f, 6812.f}, {6394.f, 2843.f}, {5923.f, 3921.f}, {7428.f, 5123.f}, {8045.f, 7523.f}, {5610.f, 6810.f}, {1265.f, 9374.f},
    {3829.f, 5942.f}, {8923.f, 1234.f}, {6593.f, 8104.f}, {7421.f, 2341.f}, {5102.f, 4720.f}, {3261.f, 9281.f}, {1923.f, 6481.f}, {8371.f, 5214.f}, {7492.f, 3712.f}, {2834.f, 8140.f},
    {6402.f, 3710.f}, {5184.f, 6234.f}, {2910.f, 4921.f}, {8293.f, 3842.f}, {7102.f, 5723.f}, {4523.f, 6921.f}, {3629.f, 8273.f}, {7193.f, 1923.f}, {5902.f, 7431.f}, {9482.f, 3721.f},
    {6134.f, 2801.f}, {4829.f, 7219.f}, {2342.f, 1832.f}, {5734.f, 4823.f}, {9210.f, 3941.f}, {3923.f, 2719.f}, {7391.f, 8012.f}, {8134.f, 1209.f}, {6523.f, 6914.f}, {2149.f, 8910.f},
    {9102.f, 3142.f}, {3742.f, 9021.f}, {6592.f, 1423.f}, {8234.f, 6319.f}, {3182.f, 7512.f}, {7293.f, 2301.f}, {5492.f, 4832.f}, {8291.f, 5793.f}, {6412.f, 3742.f}, {2143.f, 9281.f},
    {9104.f, 4923.f}, {2784.f, 6310.f}, {3721.f, 8423.f}, {4892.f, 2104.f}, {5921.f, 7312.f}, {9231.f, 3401.f}, {7204.f, 1943.f}, {5839.f, 7812.f}, {1924.f, 9201.f}, {7423.f, 3842.f}

        });

    mapa.creacion(std::move(crearTumba3));
    mapa.crearelemento({ {5003.f, 48.f}, {5840.f, 5.f}, {590.f, 10.f}, {700.f, 0.f}, {1000.f, 140.f},
{82.f, 3800.f}, {44.f, 5200.f}, {30.f, 7000.f}, {18.f, 7500.f}, {500.f, 1238.f},
{720.f, 36.f}, {899.f, 44.f}, {125.f, 227.f}, {830.f, 2000.f}, {4040.f, 5090.f},
{210.f, 480.f}, {1400.f, 7300.f}, {390.f, 4900.f}, {550.f, 3800.f}, {720.f, 2800.f},
{49.f, 7200.f}, {2000.f, 3090.f}, {202.f, 1020.f}, {74.f, 4900.f}, {51.f, 3800.f},
{13.f, 1209.f}, {150.f, 2850.f}, {83.f,1510.f}, {32.f, 5940.f}, {13.f, 1800.f},
{35.f, 5018.f}, {1900.f, 2190.f}, {54.f, 1480.f},

        {1220.f, 9000.f}, { 1220.f, 1100.f } ,{ 8020.f, 1200.f }, { 1220.f, 5300.f } ,{1220.f, 6400.f}, {1220.f, 3120.f }, {10.f, 10.f}, {585.f, 650.f},{20.f, 10.f}, {4823.f, 3290.f},
        {7584.f, 2741.f}, {2349.f, 9834.f}, {6551.f, 1209.f}, {1903.f, 7872.f}, {8734.f, 4902.f}, {3457.f, 6238.f}, {7290.f, 8456.f}, {5134.f, 2234.f}, {8612.f, 6720.f},
    {1278.f, 9432.f}, {4532.f, 5830.f}, {9081.f, 4723.f}, {6712.f, 2312.f}, {3940.f, 8904.f}, {7201.f, 6135.f}, {8231.f, 5204.f}, {2583.f, 3987.f}, {9403.f, 7401.f}, {6842.f, 1532.f},
    {3129.f, 8302.f}, {5731.f, 2018.f}, {1482.f, 7459.f}, {8154.f, 6423.f}, {9285.f, 5082.f}, {4923.f, 1756.f}, {2610.f, 8209.f}, {7523.f, 3614.f}, {1098.f, 9593.f}, {6341.f, 2712.f},
    {8423.f, 3129.f}, {7892.f, 6820.f}, {4539.f, 5471.f}, {1973.f, 6812.f}, {6394.f, 2843.f}, {5923.f, 3921.f}, {7428.f, 5123.f}, {8045.f, 7523.f}, {5610.f, 6810.f}, {1265.f, 9374.f},
    {3829.f, 5942.f}, {8923.f, 1234.f}, {6593.f, 8104.f}, {7421.f, 2341.f}, {5102.f, 4720.f}, {3261.f, 9281.f}, {1923.f, 6481.f}, {8371.f, 5214.f}, {7492.f, 3712.f}, {2834.f, 8140.f},
    {6402.f, 3710.f}, {5184.f, 6234.f}, {2910.f, 4921.f}, {8293.f, 3842.f}, {7102.f, 5723.f}, {4523.f, 6921.f}, {3629.f, 8273.f}, {7193.f, 1923.f}, {5902.f, 7431.f}, {9482.f, 3721.f},
    {6134.f, 2801.f}, {4829.f, 7219.f}, {2342.f, 1832.f}, {5734.f, 4823.f}, {9210.f, 3941.f}, {3923.f, 2719.f}, {7391.f, 8012.f}, {8134.f, 1209.f}, {6523.f, 6914.f}, {2149.f, 8910.f},
    {9102.f, 3142.f}, {3742.f, 9021.f}, {6592.f, 1423.f}, {8234.f, 6319.f}, {3182.f, 7512.f}, {7293.f, 2301.f}, {5492.f, 4832.f}, {8291.f, 5793.f}, {6412.f, 3742.f}, {2143.f, 9281.f},
    {9104.f, 4923.f}, {2784.f, 6310.f}, {3721.f, 8423.f}, {4892.f, 2104.f}, {5921.f, 7312.f}, {9231.f, 3401.f}, {7204.f, 1943.f}, {5839.f, 7812.f}, {1924.f, 9201.f}, {7423.f, 3842.f},
    {1478.f, 6542.f}, {2783.f, 5839.f}, {3521.f, 9371.f}, {4912.f, 8432.f}, {6523.f, 4391.f}, {7239.f, 1298.f}, {8491.f, 2356.f}, {9124.f, 3745.f}, {3748.f, 4952.f}, {5924.f, 7123.f},
    {8143.f, 2839.f}, {1923.f, 5481.f}, {2439.f, 2193.f}, {3194.f, 5781.f}, {4293.f, 6231.f}, {5931.f, 4719.f}, {7103.f, 2413.f}, {8274.f, 6352.f}, {9412.f, 1823.f}, {3728.f, 5012.f},
    {4892.f, 1402.f}, {6183.f, 8234.f}, {7294.f, 2394.f}, {8541.f, 7294.f}, {9423.f, 5839.f}, {3928.f, 2510.f}, {5174.f, 9402.f}, {6734.f, 5912.f}, {7482.f, 2034.f}, {8129.f, 5843.f},
    {1239.f, 4718.f}, {2493.f, 3829.f}, {3714.f, 5912.f}, {4982.f, 7201.f}, {6123.f, 1482.f}, {7329.f, 2938.f}, {8421.f, 5632.f}, {9203.f, 4813.f}, {3948.f, 1502.f}, {5124.f, 7302.f},
        });

    mapa.creacion(std::move(crearTumba4));
    mapa.crearelemento({ {8020.f, 1000.f}, {1870.f, 1900.f }, {1700.f, 520.f}, {5805.f, 6500.f},{20.f, 5000.f} ,{6381.f, 4923.f}, {7542.f, 3812.f}, {8713.f, 2831.f}, {9482.f, 7203.f},
        {4183.f, 3942.f}, {5219.f, 1234.f}, {6731.f, 4931.f}, {7493.f, 3814.f}, {8123.f, 2941.f}, {9142.f, 8492.f},
    {3941.f, 7210.f}, {4819.f, 5192.f}, {6312.f, 9401.f}, {7124.f, 1832.f}, {8341.f, 5821.f}, {9183.f, 2942.f}, {1529.f, 4831.f}, {2834.f, 5912.f}, {3729.f, 8042.f}, {4912.f, 1493.f},
    {5123.f, 7321.f}, {6921.f, 1403.f}, {7812.f, 3842.f}, {8423.f, 5193.f}, {9291.f, 1943.f}, {1832.f, 7481.f}, {2493.f, 3821.f}, {3712.f, 5612.f}, {4983.f, 7401.f}, {6124.f, 1728.f},
    {7321.f, 2049.f}, {8429.f, 5921.f}, {9204.f, 4819.f}, {3942.f, 1512.f}, {5129.f, 7310.f}, {6383.f, 4912.f}, {7541.f, 3802.f}, {8712.f, 2839.f}, {9481.f, 7201.f}, {4182.f, 3941.f},
    {5218.f, 1231.f}, {6733.f, 4919.f}, {7491.f, 3804.f}, {8124.f, 2912.f}, {9141.f, 8491.f}, {3940.f, 7212.f}, {4813.f, 5189.f}, {6310.f, 9403.f}, {7123.f, 1829.f}, {8342.f, 5812.f},
    {9182.f, 2941.f}, {1523.f, 4832.f}, {2831.f, 5913.f}, {3728.f, 8041.f}, {4913.f, 1492.f}, {5128.f, 7329.f}, {6923.f, 1402.f}, {7811.f, 3841.f}, {8422.f, 5192.f}, {9293.f, 1942.f},
    {1831.f, 7480.f}, {2492.f, 3823.f}, {3710.f, 5613.f}, {4981.f, 7400.f}, {6121.f, 1729.f}, {7328.f, 2048.f}, {8420.f, 5920.f}, {9201.f, 4818.f}, {3949.f, 1511.f}, {5121.f, 7311.f},
    {6384.f, 4913.f}, {7543.f, 3801.f}, {8714.f, 2830.f}, {9480.f, 7202.f}, {4181.f, 3940.f}, {5211.f, 1230.f}, {6732.f, 4918.f}, {7494.f, 3803.f}, {8121.f, 2911.f}, {9140.f, 8490.f},
    {3943.f, 7211.f}, {4812.f, 5188.f}, {6313.f, 9402.f}, {7122.f, 1828.f}, {8340.f, 5811.f}, {9181.f, 2940.f}, {1524.f, 4833.f}, {2832.f, 5910.f}, {3727.f, 8040.f}, {4910.f, 1491.f},
    {5127.f, 7320.f}, {6922.f, 1401.f}, {7813.f, 3840.f}, {8424.f, 5191.f}, {9290.f, 1941.f}, {1830.f, 7482.f}, {2491.f, 3822.f}, {3711.f, 5611.f}, {4984.f, 7402.f}, {6122.f, 1727.f},
    {7322.f, 2047.f}, {8427.f, 5922.f}, {9202.f, 4817.f}, {3947.f, 1510.f}, {5122.f, 7313.f}, {6382.f, 4911.f}, {7540.f, 3800.f}, {8711.f, 2838.f}, {9483.f, 7200.f}, {4184.f, 3943.f},
    {5217.f, 1233.f}, {6730.f, 4910.f}, {7490.f, 3805.f}, {8120.f, 2910.f}, {9143.f, 8493.f}, {3946.f, 7214.f}, {4811.f, 5187.f}, {6311.f, 9400.f}, {7121.f, 1827.f}, {8343.f, 5813.f},
    {9180.f, 2943.f}, {1522.f, 4830.f}, {2830.f, 5911.f}, {3720.f, 8043.f}, {4914.f, 1490.f}, {5126.f, 7328.f}, {6920.f, 1400.f}, {7814.f, 3843.f}, {8425.f, 5190.f}, {9292.f, 1940.f},
    {1834.f, 7484.f}, {2494.f, 3820.f}, {3713.f, 5610.f}, {4980.f, 7404.f}, {6120.f, 1726.f}, {7320.f, 2046.f}, {8426.f, 5923.f}, {9200.f, 4816.f}, {3944.f, 1513.f}, {5125.f, 7312.f},
    {6380.f, 4914.f}, {7544.f, 3806.f}, {8710.f, 2832.f}, {9484.f, 7205.f}, {4180.f, 3945.f}, {5216.f, 1232.f}, {6735.f, 4914.f}, {7495.f, 3807.f}, {8125.f, 2913.f}, {9144.f, 8494.f},
    {3945.f, 7213.f}, {4810.f, 5186.f}, {6314.f, 9404.f}, {7120.f, 1826.f}, {8344.f, 5814.f}, {9185.f, 2944.f}, {1521.f, 4834.f}, {2833.f, 5914.f}, {3724.f, 8044.f}, {4915.f, 1494.f},
    {5120.f, 7327.f}, {6924.f, 1404.f}, {7810.f, 3844.f}, {8428.f, 5194.f}, {9294.f, 1944.f}, {1833.f, 7485.f}, {2490.f, 3824.f}, {3715.f, 5614.f}, {4985.f, 7405.f}, {6125.f, 1724.f},
    {7324.f, 2045.f}, {8429.f, 5924.f}, {9205.f, 4815.f}, {3945.f, 1514.f}, {5128.f, 7314.f}, {6385.f, 4915.f}, {7545.f, 3809.f}, {8715.f, 2833.f}, {9485.f, 7206.f}, {4185.f, 3944.f},
    {5215.f, 1235.f} });

    mapa.creacion(std::move(crearFlor));//decoración con flores
    mapa.crearelemento({
         {50.f, 50.f}, {350.f, 50.f}, {650.f, 50.f}, {950.f, 50.f}, {1250.f, 50.f},
        {1550.f, 50.f}, {1850.f, 50.f}, {2150.f, 50.f}, {2450.f, 50.f}, {2750.f, 50.f},
        {50.f, 350.f}, {50.f, 650.f}, {50.f, 950.f}, {50.f, 1250.f}, {50.f, 1550.f}, {50.f, 1850.f}, {50.f, 2150.f},
        {50.f, 2550.f}, {50.f, 2850.f}, {50.f, 3150.f}, {50.f, 3450.f}, {50.f, 3650.f}, {50.f, 3950.f},{50.f, 2550.f},
        {50.f, 4150.f}, {50.f, 4450.f}, {50.f, 4650.f}, {50.f, 4950.f}, {50.f, 5150.f},
        {50.f, 5450.f}, {50.f, 5650.f}, {50.f, 5950.f}, {50.f, 6150.f}, {50.f, 6350.f},
        {50.f, 6950.f}, {50.f, 7250.f}, {50.f, 7450.f}, {50.f, 7750.f}, {50.f, 8050.f}, {50.f, 8150.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9550.f},

        {350.f, 4300.f},{650.f, 4300.f},{950.f, 4300.f},{1250.f, 4300.f},{1500.f, 4300.f},
        {1500.f, 4700.f},{1500.f, 5000.f},{1500.f, 5300.f},{1500.f, 5600.f},{1500.f, 5900.f},{1500.f, 6100.f},

        {1300.f, 6100.f},{1000.f, 6100.f},{700.f, 6100.f},{1300.f, 5800.f},{1250.f, 4300.f},{1500.f, 4300.f},
        {1500.f, 4700.f},{1200.f, 6500.f},{1200.f, 6800.f},{1200.f, 7100.f},{1200.f, 7400.f},
        {1200.f, 7700.f},{1200.f, 8000.f},{1200.f, 8300.f},{1200.f, 8600.f},


        {9500.f, 100.f},{9200.f, 100.f},{8100.f, 100.f},{7900.f, 100.f},{7600.f, 100.f},{7300.f, 100.f},{7000.f, 100.f},{6700.f, 100.f},
        {6500.f, 400.f},{6200.f, 400.f},{5900.f, 400.f},{5600.f, 400.f},{5300.f, 400.f},{5000.f, 400.f},{4700.f, 400.f},{4500.f, 400.f},

        {6200.f, 700.f},{6200.f, 1100.f},{6200.f, 1400.f},{6200.f, 1700.f},{6200.f, 2000.f},{6200.f, 2300.f},{6500.f, 2300.f},{6500.f, 2300.f},

        {6500.f, 700.f},{6500.f, 2600.f},{7000.f, 1800.f},{7000.f, 3200.f},{7000.f, 3500.f},{6200.f, 2300.f},{6500.f, 2300.f},{6500.f, 2300.f},
        {6500.f, 400.f},{6200.f, 400.f},{5900.f, 400.f},{5600.f, 400.f},{5300.f, 400.f},{5000.f, 400.f},{4700.f, 400.f},{4500.f, 400.f},

        {7900.f, 2100.f},{7900.f, 2400.f},{7900.f, 2700.f},{7900.f, 3000.f},{7900.f, 3300.f},{7900.f, 3600.f},{7900.f, 3900.f},{7900.f, 4200.f},
        {7900.f, 1800.f},{7900.f, 1500.f},{7900.f, 1200.f},{7900.f, 900.f},{8200.f, 900.f},{8500.f, 900.f},{8800.f, 900.f},{9000.f, 900.f},
        //
        {8800.f, 1500.f},{8800.f, 1200.f},{8800.f, 900.f},
        {7900.f, 4200.f},{8200.f, 4500.f},{8300.f, 4500.f},{8600.f, 4500.f},{8900.f, 4500.f},
        //
        {6200.f, 9500.f},{6500.f, 9500.f},{6800.f, 9500.f},{7100.f, 9500.f},
        {5900.f, 9500.f},{5600.f, 9500.f},{5300.f, 9500.f},{5000.f, 9500.f},

        {5000.f, 9200.f},{5000.f, 8900.f},{5000.f, 8600.f},{5000.f, 8300.f},{5000.f, 8000.f},{5000.f, 7700.f},{5000.f, 7400.f},{5000.f, 00.f},

        {7900.f, 1800.f},{7900.f, 1500.f},{7900.f, 1200.f},{7900.f, 900.f},{8200.f, 900.f},{8500.f, 900.f},{8800.f, 900.f},{9000.f, 900.f},

        {1500.f, 5000.f},

        {350.f, 7000.f},{650.f, 7000.f},{700.f, 7300.f},{700.f, 7500.f},{700.f, 7800.f},{700.f, 8100.f},{700.f, 8400.f},
        {1000.f, 7800.f},{500.f, 8100.f},{300.f, 8100.f},

        {400.f, 1550.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},

        {350.f, 9300.f},
        {650.f, 9300.f}, {950.f, 9300.f}, {1250.f, 9300.f}, {1550.f, 9300.f}, {1850.f, 9300.f}, {2150.f, 9300.f},
        {2450.f, 9300.f}, {2750.f,9300.f}, {3050.f,9300.f}, {3350.f, 9300.f}, {3650.f, 9300.f}, {3950.f, 9300.f},

        {3050.f, 9000.f}, {3050.f, 8700.f}, {3050.f, 8400.f}, {3050.f, 8100.f}, {3050.f, 7800.f}, {3050.f, 7500.f},

        {750.f, 1250.f},
        {1050.f, 1250.f}, {1350.f, 1250.f}, {1650.f, 1250.f}, {1950.f, 1250.f}, {5550.f, 7250.f}, {2750.f, 1250.f},
        {450.f, 1550.f}, {2250.f, 1550.f}, {50.f, 1850.f}, {450.f, 1850.f}, {750.f, 1850.f}, {2250.f, 1850.f},
        {2750.f, 1850.f}, {50.f, 2150.f}, {750.f, 2150.f}, {1050.f, 2150.f}, {1350.f, 2150.f}, {1650.f, 2150.f},
        {1950.f, 2150.f}, {2250.f, 2150.f}, {2750.f, 2150.f}, {50.f, 2450.f}, {450.f, 2450.f}, {750.f, 2450.f},
        {2250.f, 2450.f}, {2750.f, 2450.f}, {50.f, 2750.f}, {350.f, 2750.f}, {650.f, 2750.f}, {950.f, 2750.f},
        {950.f, 3050.f}, {950.f, 2750.f}, {1850.f, 50.f}, {2150.f, 2750.f}, {2450.f, 2750.f}, {2750.f, 2750.f},
        {1250.f, 2750.f}, {1550.f, 2750.f}, {1850.f, 350.f}, {2150.f, 650.f}, {2450.f, 950.f}, {2750.f, 1250.f},
        {1250.f, 1550.f}, {1550.f, 1850.f}, {1850.f, 2150.f}, {2150.f, 2450.f}, {2450.f, 2750.f}, {2750.f, 3050.f},
        {1250.f, 3350.f}, {1550.f, 3650.f}, {1850.f, 3950.f}, {2150.f, 4150.f}, {2450.f, 4350.f}, {2750.f, 4650.f},

        {3000.f, 50.f}, {3300.f, 50.f}, {3600.f, 50.f}, {3900.f, 50.f}, {3900.f, 400.f}, {3900.f, 750.f},
        {3900.f, 1000.f}, {3900.f, 1450.f}, {3900.f, 1750.f}, {3600.f, 2000.f}, {3600.f, 1500.f}, {3600.f, 1500.f},
        {4200.f, 1350.f}, {4200.f, 1700.f}, {4200.f, 2050.f}, {4200.f, 2400.f}, {4200.f, 2700.f}, {4200.f, 3050.f},

        {4200.f, 3400.f}, {4200.f, 3750.f}, {4200.f, 4000.f}, {4200.f, 4350.f}, {4200.f, 4700.f}, {4200.f, 5050.f},
        {4800.f, 1000.f}, {4800.f, 1450.f}, {4800.f, 1750.f}, {4800.f, 2000.f}, {4800.f, 1500.f}, {4800.f, 1500.f},

        {4700.f, 3050.f}, {4700.f, 3400.f}, {4700.f, 3750.f},
        {5000.f, 2750.f}, {5000.f, 3000.f}, {5000.f, 3350.f},
        {4700.f, 4000.f}, {4700.f, 4350.f}, {4700.f, 4700.f}, {4400.f, 4700.f}, {4750.f, 4700.f}, {5000.f, 4700.f},
        {5300.f, 4700.f}, {5600.f, 4700.f}, {5900.f, 4700.f}, {6200.f, 4700.f}, {6500.f, 4700.f}, {6800.f, 4700.f},

        {6800.f, 4400.f}, {6800.f, 4100.f}, {6800.f, 3800.f}, {6800.f, 3500.f}, {6800.f, 3200.f}, {6800.f, 2900.f},

        {6500.f, 4400.f}, {6300.f, 4100.f}, {6000.f, 3800.f}, {5700.f, 3500.f}, {5400.f, 3200.f}, {5300.f, 2900.f},
        //
        {8700.f, 6200.f}, {8400.f, 6200.f}, {8300.f, 6200.f}, {8000.f, 6200.f}, {7800.f, 6200.f}, {7500.f, 6200.f},
        {7200.f, 6200.f}, {6900.f, 6200.f}, {6600.f, 6200.f}, {6300.f, 6200.f}, {6000.f, 6200.f}, {5700.f, 6200.f},

        {7000.f, 6200.f }, {7000.f, 6500.f }, {7000.f, 6800.f }, {7000.f, 7100.f }, { 7000.f, 7400.f }, {7000.f, 7700.f },
        {7000.f, 8000.f }, {7000.f, 8300.f }, {7000.f, 8600.f }, {7000.f, 8900.f }, { 6700.f, 8900.f }, {6400.f, 8900.f },
        {6800.f, 7800.f }, {7000.f, 7500.f }, {7000.f, 7300.f }, {7000.f, 7000.f },
        {6700.f, 8900.f }, {6400.f, 8900.f },{6100.f, 8900.f },{5900.f, 8900.f },
        {6000.f, 6000.f }, {6000.f, 6300.f },{6000.f, 6600.f },{6000.f, 6900.f },
        {6000.f, 7200.f }, {6000.f, 7500.f },{6000.f, 7800.f },{6000.f, 8000.f },
        {6000.f, 5700.f }, {6000.f, 5400.f },{6000.f, 5100.f },
        {5700.f, 5400.f }, {5400.f, 5400.f },{5100.f, 5400.f },{4800.f, 5400.f },

        {7100.f, 2900.f}, {7400.f, 2900.f}, {7700.f, 2900.f}, {8000.f, 2900.f}, {8300.f, 2900.f}, {8600.f, 2900.f},
        {8900.f, 2900.f}, {9100.f, 2900.f}, {9400.f, 2900.f}, {9500.f, 2900.f}, {9400.f, 3200.f}, {9400.f, 3200.f},

        {9200.f, 200.f}, {9200.f, 500.f}, {9200.f, 700.f}, {9200.f, 1000.f}, {9200.f, 1300.f}, {9200.f, 1600.f},
        {7200.f, 7300.f}, {7200.f, 7600.f}, {7400.f, 7900.f}, {7200, 7200.f}, {7200.f, 7500.f}, {7200.f, 7800.f},

        {9400.f, 3500.f}, {9400.f, 3800.f}, {9400.f, 4100.f}, {9400.f, 4400.f}, {9400.f, 4700.f}, {9400.f, 5000.f},
        {9400.f, 5300.f}, {9400.f, 5600.f}, {9400.f, 5900.f}, {9400.f, 6200.f}, {9400.f, 6500.f}, {9400.f, 6800.f},
        {9400.f, 7100.f}, {9400.f, 7400.f}, {9400.f, 7700.f}, {9400.f, 8000.f}, {9400.f, 8300.f}, {9400.f, 8600.f},
        {9400.f, 8900.f}, {9400.f, 8900.f},
        {9300.f, 9500.f},
        {8900.f, 6200.f},{8300.f, 6200.f}, {8500.f, 6200.f},

        {9000.f, 9400.f},{8700.f, 9400.f}, {8400.f, 9400.f}, {8100.f,9400.f},{7800.f,9400.f}, {7500.f, 9400.f}, {7200.f, 9400.f},
        {9000.f, 8100.f}, {9000.f, 7800.f}, {9000.f, 7500.f},
        {9000.f, 5300.f}, {9000.f, 5600.f}, {9000.f, 5900.f},
        {9000.f, 6200.f},{9100.f, 6200.f},
        {9000.f, 6500.f}, {9000.f, 6700.f},
        {9000.f, 7100.f }, {9000.f, 7400.f}, {9000.f, 7700.f}, {9000.f, 8000.f}, {9000.f, 8300.f}, {9000.f, 8600.f},

        {4000.f, 6000.f }, { 4300.f, 6300.f }, { 4600.f, 6900.f }, { 4900.f, 6800.f }, { 5000.f, 7000.f }, { 5000.f, 6800.f },

        {3700.f, 6000.f }, { 3700.f, 6300.f }, { 9000.f, 7700.f }, { 9000.f, 8000.f }, { 9000.f, 8300.f }, { 9000.f, 8600.f },


        { 4000.f, 8600.f }, { 4000.f, 8900.f }, { 4000.f, 9100.f }, { 4000.f, 8000.f }, { 4300.f, 8000.f },
        { 4600.f, 8000.f }, { 4600.f, 7700.f }, { 4600.f, 7400.f },
        { 4600.f, 7100.f }, { 4600.f, 6800.f },
        { 3800.f, 5700.f }, { 3500.f, 5700.f }, { 3200.f, 5700.f }, { 2900.f, 5700.f }, { 2600.f, 5700.f }, { 2300.f, 5700.f },
        { 2300.f, 6000.f }, { 2600.f, 4500.f }, { 7900.f, 6700 }, { 7900.f, 900.f }, { 8200.f, 900.f }, { 8500.f, 900.f }, { 8800.f, 900.f }, { 9000.f, 900.f },


        { 2000.f, 7000.f }, { 2000.f, 7300.f }, { 2000.f, 7600.f }, { 2000.f, 6700.f }, { 2000.f, 6400.f }, { 2000.f, 6100.f },
        { 2000.f, 7600.f }, { 2000.f, 7900.f }, { 2000.f, 8200.f }, { 2300.f, 7600.f }, { 2600.f, 7600.f }, { 2900.f, 7600.f },

        { 4500.f, 7000.f }, { 3700.f, 6300.f }, { 9000.f, 7000.f }, { 9000.f, 8000.f }, { 9000.f, 8300.f }, { 9000.f, 8600.f },

        { 4500.f, 4000.f }, { 4500.f, 4900.f }, { 4500.f, 6400.f }, { 2300.f, 7600.f },
        { 4000.f, 3700.f }, { 3700.f, 3700.f }, { 3400.f, 3700.f }, { 3100.f, 3700.f }, { 2900.f, 3700.f }, { 2600.f, 3700.f }

        });

    mapa.creacion(std::move(crearFlor2));
    mapa.crearelemento({ {40.f, 40.f}, {100.f, 20.f} ,{ 300.f, 400.f }, {500.f, 20.f}, { 450.f, 10.f },
        { 3950.f, 7218.f }, { 4818.f, 5185.f }, { 6318.f, 9408.f }, { 7128.f, 1822.f }, { 8348.f, 5818.f }, { 9188.f, 2948.f }, { 1528.f, 4838.f }, { 2838.f, 5918.f }, { 3728.f, 8048.f }, { 4919.f, 1498.f },
        { 5129.f, 7323.f }, { 6928.f, 1408.f }, { 7818.f, 3848.f }, { 8435.f, 5198.f }, { 9298.f, 1948.f }, { 1838.f, 7489.f }, { 2498.f, 3828.f }, { 3719.f, 5618.f }, { 4989.f, 7409.f }, { 6129.f, 1720.f },
        { 7328.f, 2041.f }, { 8436.f, 5928.f }, { 9209.f, 4811.f }, { 3950.f, 1518.f }, { 5130.f, 7318.f }, { 6389.f, 4919.f }, { 7549.f, 3810.f }, { 8719.f, 2836.f }, { 9489.f, 7210.f }, { 4189.f, 3949.f },
        { 5215.f, 1239.f }, { 6740.f, 4920.f }, { 7500.f, 3811.f }, { 8130.f, 2918.f }, { 9149.f, 8499.f }, { 3951.f, 7219.f }, { 4819.f, 5186.f }, { 6319.f, 9409.f }, { 7129.f, 1821.f }, { 8349.f, 5819.f },
        { 9189.f, 2949.f }, { 1529.f, 4839.f }, { 2839.f, 5919.f }, { 3729.f, 8049.f }, { 4920.f, 1499.f }, { 5131.f, 7322.f }, { 6929.f, 1409.f }, { 7819.f, 3849.f }, { 8437.f, 5199.f }, { 9299.f, 1949.f },
        { 1839.f, 7490.f }, { 2499.f, 3829.f }, { 3720.f, 5619.f }, { 4990.f, 7410.f }, { 6130.f, 1719.f }, { 7329.f, 2040.f }, { 8438.f, 5929.f }, { 9210.f, 4810.f }, { 3951.f, 1519.f }, { 5132.f, 7319.f },
        { 6390.f, 4920.f }, { 7550.f, 3811.f }, { 8720.f, 2837.f }, { 9490.f, 7211.f }, { 4190.f, 3950.f }, { 5216.f, 1240.f }, { 6741.f, 4921.f }, { 7501.f, 3812.f }, { 8131.f, 2919.f }, { 9150.f, 8500.f },
        { 3952.f, 7220.f }, { 4820.f, 5187.f }, { 6320.f, 9410.f }, { 7130.f, 1820.f }, { 8350.f, 5820.f }, { 9190.f, 2950.f }, { 1530.f, 4840.f }, { 2840.f, 5920.f }, { 3730.f, 8050.f }, { 4921.f, 1500.f },
        { 5133.f, 7321.f }, { 6930.f, 1410.f }, { 7820.f, 3850.f }, { 8439.f, 5200.f }, { 9300.f, 1950.f }, { 1840.f, 7491.f }, { 2500.f, 3830.f }, { 3721.f, 5620.f }, { 4991.f, 7411.f }, { 6131.f, 1718.f },
        { 7330.f, 2039.f }, { 8430.f, 5930.f }, { 9211.f, 4809.f }, { 3952.f, 1520.f }, { 5134.f, 7320.f }, { 6391.f, 4921.f }, { 7551.f, 3812.f }, { 8721.f, 2838.f }, { 9491.f, 7212.f }, { 4191.f, 3951.f },
        { 5217.f, 1241.f }, { 6742.f, 4922.f }, { 7502.f, 3813.f }, { 8132.f, 2920.f }, { 9151.f, 8501.f }, { 3953.f, 7221.f }, { 4821.f, 5188.f }, { 6321.f, 9411.f }, { 7131.f, 1819.f }, { 8351.f, 5821.f },
        { 9191.f, 2951.f }, { 1531.f, 4841.f }, { 2841.f, 5921.f }, { 3731.f, 8051.f }, { 4922.f, 1501.f }, { 5135.f, 7324.f }, { 6931.f, 1411.f }, { 7821.f, 3851.f }, { 8431.f, 5201.f }, { 9301.f, 1951.f },
        { 1841.f, 7492.f }, { 2501.f, 3831.f }, { 3722.f, 5621.f }, { 4992.f, 7412.f }, { 6132.f, 1717.f }, { 7331.f, 2038.f }, { 8432.f, 5931.f }, { 9212.f, 4808.f }, { 3953.f, 1521.f }, { 5136.f, 7323.f },
        { 6392.f, 4922.f }, { 7552.f, 3813.f }, { 8722.f, 2839.f }, { 9492.f, 7213.f }, { 4192.f, 3952.f }, { 5218.f, 1242.f }, { 6743.f, 4923.f }, { 7503.f, 3814.f }, { 8133.f, 2921.f }, { 9152.f, 8502.f },
        { 3954.f, 7222.f }, { 4822.f, 5189.f }, { 6322.f, 9412.f }, { 7132.f, 1818.f }, { 8352.f, 5822.f }, { 9192.f, 2952.f }, { 1532.f, 4842.f }, { 2842.f, 5922.f }, { 3732.f, 8052.f }, { 4923.f, 1502.f },
        { 5137.f, 7322.f }, { 6932.f, 1412.f }, { 7822.f, 3852.f } });

    mapa.creacion(std::move(crearCamino));
    mapa.crearelemento({
         {50.f, 50.f}, {350.f, 50.f}, {650.f, 50.f}, {950.f, 50.f}, {1250.f, 50.f},
        {1550.f, 50.f}, {1850.f, 50.f}, {2150.f, 50.f}, {2450.f, 50.f}, {2750.f, 50.f},
        {50.f, 350.f}, {50.f, 650.f}, {50.f, 950.f}, {50.f, 1250.f}, {50.f, 1550.f}, {50.f, 1850.f}, {50.f, 2150.f},
        {50.f, 2550.f}, {50.f, 2850.f}, {50.f, 3150.f}, {50.f, 3450.f}, {50.f, 3650.f}, {50.f, 3950.f},{50.f, 2550.f},
        {50.f, 4150.f}, {50.f, 4450.f}, {50.f, 4650.f}, {50.f, 4950.f}, {50.f, 5150.f},
        {50.f, 5450.f}, {50.f, 5650.f}, {50.f, 5950.f}, {50.f, 6150.f}, {50.f, 6350.f},
        {50.f, 6950.f}, {50.f, 7250.f}, {50.f, 7450.f}, {50.f, 7750.f}, {50.f, 8050.f}, {50.f, 8150.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9550.f},

        {350.f, 4300.f},{650.f, 4300.f},{950.f, 4300.f},{1250.f, 4300.f},{1500.f, 4300.f},
        {1500.f, 4700.f},{1500.f, 5000.f},{1500.f, 5300.f},{1500.f, 5600.f},{1500.f, 5900.f},{1500.f, 6100.f},

        {1300.f, 6100.f},{1000.f, 6100.f},{700.f, 6100.f},{1300.f, 5800.f},{1250.f, 4300.f},{1500.f, 4300.f},
        {1500.f, 4700.f},{1200.f, 6500.f},{1200.f, 6800.f},{1200.f, 7100.f},{1200.f, 7400.f},
        {1200.f, 7700.f},{1200.f, 8000.f},{1200.f, 8300.f},{1200.f, 8600.f},


        {9500.f, 100.f},{9200.f, 100.f},{8100.f, 100.f},{7900.f, 100.f},{7600.f, 100.f},{7300.f, 100.f},{7000.f, 100.f},{6700.f, 100.f},
        {6500.f, 400.f},{6200.f, 400.f},{5900.f, 400.f},{5600.f, 400.f},{5300.f, 400.f},{5000.f, 400.f},{4700.f, 400.f},{4500.f, 400.f},

        {6200.f, 700.f},{6200.f, 1100.f},{6200.f, 1400.f},{6200.f, 1700.f},{6200.f, 2000.f},{6200.f, 2300.f},{6500.f, 2300.f},{6500.f, 2300.f},

        {6500.f, 700.f},{6500.f, 2600.f},{7000.f, 1800.f},{7000.f, 3200.f},{7000.f, 3500.f},{6200.f, 2300.f},{6500.f, 2300.f},{6500.f, 2300.f},
        {6500.f, 400.f},{6200.f, 400.f},{5900.f, 400.f},{5600.f, 400.f},{5300.f, 400.f},{5000.f, 400.f},{4700.f, 400.f},{4500.f, 400.f},

        {7900.f, 2100.f},{7900.f, 2400.f},{7900.f, 2700.f},{7900.f, 3000.f},{7900.f, 3300.f},{7900.f, 3600.f},{7900.f, 3900.f},{7900.f, 4200.f},
        {7900.f, 1800.f},{7900.f, 1500.f},{7900.f, 1200.f},{7900.f, 900.f},{8200.f, 900.f},{8500.f, 900.f},{8800.f, 900.f},{9000.f, 900.f},
        //
        {8800.f, 1500.f},{8800.f, 1200.f},{8800.f, 900.f},
        {7900.f, 4200.f},{8200.f, 4500.f},{8300.f, 4500.f},{8600.f, 4500.f},{8900.f, 4500.f},
        //
        {6200.f, 9500.f},{6500.f, 9500.f},{6800.f, 9500.f},{7100.f, 9500.f},
        {5900.f, 9500.f},{5600.f, 9500.f},{5300.f, 9500.f},{5000.f, 9500.f},

        {5000.f, 9200.f},{5000.f, 8900.f},{5000.f, 8600.f},{5000.f, 8300.f},{5000.f, 8000.f},{5000.f, 7700.f},{5000.f, 7400.f},{5000.f, 00.f},

        {7900.f, 1800.f},{7900.f, 1500.f},{7900.f, 1200.f},{7900.f, 900.f},{8200.f, 900.f},{8500.f, 900.f},{8800.f, 900.f},{9000.f, 900.f},

        {1500.f, 5000.f},

        {350.f, 7000.f},{650.f, 7000.f},{700.f, 7300.f},{700.f, 7500.f},{700.f, 7800.f},{700.f, 8100.f},{700.f, 8400.f},
        {1000.f, 7800.f},{500.f, 8100.f},{300.f, 8100.f},

        {400.f, 1550.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},
        {50.f, 8450.f}, {50.f, 8750.f}, {50.f, 9050.f}, {50.f, 9350.f}, {50.f, 9650.f},

        {350.f, 9300.f},
        {650.f, 9300.f}, {950.f, 9300.f}, {1250.f, 9300.f}, {1550.f, 9300.f}, {1850.f, 9300.f}, {2150.f, 9300.f},
        {2450.f, 9300.f}, {2750.f,9300.f}, {3050.f,9300.f}, {3350.f, 9300.f}, {3650.f, 9300.f}, {3950.f, 9300.f},

        {3050.f, 9000.f}, {3050.f, 8700.f}, {3050.f, 8400.f}, {3050.f, 8100.f}, {3050.f, 7800.f}, {3050.f, 7500.f},

        {750.f, 1250.f},
        {1050.f, 1250.f}, {1350.f, 1250.f}, {1650.f, 1250.f}, {1950.f, 1250.f}, {5550.f, 7250.f}, {2750.f, 1250.f},
        {450.f, 1550.f}, {2250.f, 1550.f}, {50.f, 1850.f}, {450.f, 1850.f}, {750.f, 1850.f}, {2250.f, 1850.f},
        {2750.f, 1850.f}, {50.f, 2150.f}, {750.f, 2150.f}, {1050.f, 2150.f}, {1350.f, 2150.f}, {1650.f, 2150.f},
        {1950.f, 2150.f}, {2250.f, 2150.f}, {2750.f, 2150.f}, {50.f, 2450.f}, {450.f, 2450.f}, {750.f, 2450.f},
        {2250.f, 2450.f}, {2750.f, 2450.f}, {50.f, 2750.f}, {350.f, 2750.f}, {650.f, 2750.f}, {950.f, 2750.f},
        {950.f, 3050.f}, {950.f, 2750.f}, {1850.f, 50.f}, {2150.f, 2750.f}, {2450.f, 2750.f}, {2750.f, 2750.f},
        {1250.f, 2750.f}, {1550.f, 2750.f}, {1850.f, 350.f}, {2150.f, 650.f}, {2450.f, 950.f}, {2750.f, 1250.f},
        {1250.f, 1550.f}, {1550.f, 1850.f}, {1850.f, 2150.f}, {2150.f, 2450.f}, {2450.f, 2750.f}, {2750.f, 3050.f},
        {1250.f, 3350.f}, {1550.f, 3650.f}, {1850.f, 3950.f}, {2150.f, 4150.f}, {2450.f, 4350.f}, {2750.f, 4650.f},

        {3000.f, 50.f}, {3300.f, 50.f}, {3600.f, 50.f}, {3900.f, 50.f}, {3900.f, 400.f}, {3900.f, 750.f},
        {3900.f, 1000.f}, {3900.f, 1450.f}, {3900.f, 1750.f}, {3600.f, 2000.f}, {3600.f, 1500.f}, {3600.f, 1500.f},
        {4200.f, 1350.f}, {4200.f, 1700.f}, {4200.f, 2050.f}, {4200.f, 2400.f}, {4200.f, 2700.f}, {4200.f, 3050.f},

        {4200.f, 3400.f}, {4200.f, 3750.f}, {4200.f, 4000.f}, {4200.f, 4350.f}, {4200.f, 4700.f}, {4200.f, 5050.f},
        {4800.f, 1000.f}, {4800.f, 1450.f}, {4800.f, 1750.f}, {4800.f, 2000.f}, {4800.f, 1500.f}, {4800.f, 1500.f},

        {4700.f, 3050.f}, {4700.f, 3400.f}, {4700.f, 3750.f},
        {5000.f, 2750.f}, {5000.f, 3000.f}, {5000.f, 3350.f},
        {4700.f, 4000.f}, {4700.f, 4350.f}, {4700.f, 4700.f}, {4400.f, 4700.f}, {4750.f, 4700.f}, {5000.f, 4700.f},
        {5300.f, 4700.f}, {5600.f, 4700.f}, {5900.f, 4700.f}, {6200.f, 4700.f}, {6500.f, 4700.f}, {6800.f, 4700.f},

        {6800.f, 4400.f}, {6800.f, 4100.f}, {6800.f, 3800.f}, {6800.f, 3500.f}, {6800.f, 3200.f}, {6800.f, 2900.f},

        {6500.f, 4400.f}, {6300.f, 4100.f}, {6000.f, 3800.f}, {5700.f, 3500.f}, {5400.f, 3200.f}, {5300.f, 2900.f},
        //
        {8700.f, 6200.f}, {8400.f, 6200.f}, {8300.f, 6200.f}, {8000.f, 6200.f}, {7800.f, 6200.f}, {7500.f, 6200.f},
        {7200.f, 6200.f}, {6900.f, 6200.f}, {6600.f, 6200.f}, {6300.f, 6200.f}, {6000.f, 6200.f}, {5700.f, 6200.f},

        {7000.f, 6200.f }, {7000.f, 6500.f }, {7000.f, 6800.f }, {7000.f, 7100.f }, { 7000.f, 7400.f }, {7000.f, 7700.f },
        {7000.f, 8000.f }, {7000.f, 8300.f }, {7000.f, 8600.f }, {7000.f, 8900.f }, { 6700.f, 8900.f }, {6400.f, 8900.f },
        {6800.f, 7800.f }, {7000.f, 7500.f }, {7000.f, 7300.f }, {7000.f, 7000.f },
        {6700.f, 8900.f }, {6400.f, 8900.f },{6100.f, 8900.f },{5900.f, 8900.f },
        {6000.f, 6000.f }, {6000.f, 6300.f },{6000.f, 6600.f },{6000.f, 6900.f },
        {6000.f, 7200.f }, {6000.f, 7500.f },{6000.f, 7800.f },{6000.f, 8000.f },
        {6000.f, 5700.f }, {6000.f, 5400.f },{6000.f, 5100.f },
        {5700.f, 5400.f }, {5400.f, 5400.f },{5100.f, 5400.f },{4800.f, 5400.f },

        {7100.f, 2900.f}, {7400.f, 2900.f}, {7700.f, 2900.f}, {8000.f, 2900.f}, {8300.f, 2900.f}, {8600.f, 2900.f},
        {8900.f, 2900.f}, {9100.f, 2900.f}, {9400.f, 2900.f}, {9500.f, 2900.f}, {9400.f, 3200.f}, {9400.f, 3200.f},

        {9200.f, 200.f}, {9200.f, 500.f}, {9200.f, 700.f}, {9200.f, 1000.f}, {9200.f, 1300.f}, {9200.f, 1600.f},
        {7200.f, 7300.f}, {7200.f, 7600.f}, {7400.f, 7900.f}, {7200, 7200.f}, {7200.f, 7500.f}, {7200.f, 7800.f},

        {9400.f, 3500.f}, {9400.f, 3800.f}, {9400.f, 4100.f}, {9400.f, 4400.f}, {9400.f, 4700.f}, {9400.f, 5000.f},
        {9400.f, 5300.f}, {9400.f, 5600.f}, {9400.f, 5900.f}, {9400.f, 6200.f}, {9400.f, 6500.f}, {9400.f, 6800.f},
        {9400.f, 7100.f}, {9400.f, 7400.f}, {9400.f, 7700.f}, {9400.f, 8000.f}, {9400.f, 8300.f}, {9400.f, 8600.f},
        {9400.f, 8900.f}, {9400.f, 8900.f},
        {9300.f, 9500.f},
        {8900.f, 6200.f},{8300.f, 6200.f}, {8500.f, 6200.f},

        {9000.f, 9400.f},{8700.f, 9400.f}, {8400.f, 9400.f}, {8100.f,9400.f},{7800.f,9400.f}, {7500.f, 9400.f}, {7200.f, 9400.f},
        {9000.f, 8100.f}, {9000.f, 7800.f}, {9000.f, 7500.f},
        {9000.f, 5300.f}, {9000.f, 5600.f}, {9000.f, 5900.f},
        {9000.f, 6200.f},{9100.f, 6200.f},
        {9000.f, 6500.f}, {9000.f, 6700.f},
        {9000.f, 7100.f }, {9000.f, 7400.f}, {9000.f, 7700.f}, {9000.f, 8000.f}, {9000.f, 8300.f}, {9000.f, 8600.f},

        {4000.f, 6000.f }, { 4300.f, 6300.f }, { 4600.f, 6900.f }, { 4900.f, 6800.f }, { 5000.f, 7000.f }, { 5000.f, 6800.f },

        {3700.f, 6000.f }, { 3700.f, 6300.f }, { 9000.f, 7700.f }, { 9000.f, 8000.f }, { 9000.f, 8300.f }, { 9000.f, 8600.f },


        { 4000.f, 8600.f }, { 4000.f, 8900.f }, { 4000.f, 9100.f }, { 4000.f, 8000.f }, { 4300.f, 8000.f },
        { 4600.f, 8000.f }, { 4600.f, 7700.f }, { 4600.f, 7400.f },
        { 4600.f, 7100.f }, { 4600.f, 6800.f },
        { 3800.f, 5700.f }, { 3500.f, 5700.f }, { 3200.f, 5700.f }, { 2900.f, 5700.f }, { 2600.f, 5700.f }, { 2300.f, 5700.f },
        { 2300.f, 6000.f }, { 2600.f, 4500.f }, { 7900.f, 6700 }, { 7900.f, 900.f }, { 8200.f, 900.f }, { 8500.f, 900.f }, { 8800.f, 900.f }, { 9000.f, 900.f },


        { 2000.f, 7000.f }, { 2000.f, 7300.f }, { 2000.f, 7600.f }, { 2000.f, 6700.f }, { 2000.f, 6400.f }, { 2000.f, 6100.f },
        { 2000.f, 7600.f }, { 2000.f, 7900.f }, { 2000.f, 8200.f }, { 2300.f, 7600.f }, { 2600.f, 7600.f }, { 2900.f, 7600.f },

        { 4500.f, 7000.f }, { 3700.f, 6300.f }, { 9000.f, 7000.f }, { 9000.f, 8000.f }, { 9000.f, 8300.f }, { 9000.f, 8600.f },

        { 4500.f, 4000.f }, { 4500.f, 4900.f }, { 4500.f, 6400.f }, { 2300.f, 7600.f },
        { 4000.f, 3700.f }, { 3700.f, 3700.f }, { 3400.f, 3700.f }, { 3100.f, 3700.f }, { 2900.f, 3700.f }, { 2600.f, 3700.f }

        });

    mapa.creacion(std::move(crearPasto));
    mapa.crearelemento({ {20.f, 20.f},
        {300.f, 200.f}, {500.f, 400.f}, {150.f, 350.f}, {450.f, 150.f}, {150.f, 550.f}, {780.f, 510.f}, {250.f, 5750.f},
        {100.f, 10.f}, {3000.f, 50.f}, {3600.f, 50.f}, {4000.f, 50.f}, {480.f, 350.f}, {450.f, 150.f}, {1850.f, 2550.f},
        {7780.f, 510.f}, {2150.f, 5710.f}, {710.f, 5250.f}, {750.f, 5440.f}, {900.f, 200.f}, {550.f, 4100.f}, {150.f, 2150.f},
        {4150.f, 850.f}, {150.f, 5550.f}, {1780.f, 510.f}, {2250.f, 5850.f}, {750.f, 520.f}, {7550.f, 1150.f}

        });

    cargarJugadorTexturas();
    cargarJugador2Texturas();

    zombiesTex[0].loadFromFile("./texturas/zombieBajando.png");//Generar Zombies
    zombiesTex[1].loadFromFile("./texturas/zombieSubiendo.png");
    zombiesTex[2].loadFromFile("./texturas/zombieIzquierda.png");
    zombiesTex[3].loadFromFile("./texturas/zombieDerecha.png");

    fantasma.setTexture(zombiesTex[0]);
    fantasma.setScale(2.f, 2.f);
    fantasma.setPosition(800.f, 400.f);

    barraVidaJugador.setSize(sf::Vector2f(100.f, 10.f));//Hecho
    barraVidaJugador2.setSize(sf::Vector2f(100.f, 10.f));
    barraVidaJugador.setFillColor(sf::Color::Green);
    barraVidaJugador.setFillColor(sf::Color::Blue);
    barraVidaJugador.setPosition(jugador.getPosition().x, jugador.getPosition().y);
    barraVidaJugador2.setPosition(jugador2.getPosition().x, jugador2.getPosition().y);


    barraVidaFantasma.setSize(sf::Vector2f(40.f, 5.f));
    barraVidaFantasma.setFillColor(sf::Color::Red);
    barraVidaFantasma.setPosition(fantasma.getPosition().x + 10, fantasma.getPosition().y - 5);

    rayoTexturas[0].loadFromFile("./texturas/ataqueArriba.png");
    rayoTexturas[1].loadFromFile("./texturas/ataqueAbajo.png");
    rayoTexturas[2].loadFromFile("./texturas/ataqueIzquierda.png");
    rayoTexturas[3].loadFromFile("./texturas/ataqueDerecha.png");

    monstruoTex[0].loadFromFile("./texturas/fantasmaSubiendo.png");
    monstruoTex[1].loadFromFile("./texturas/fantasmaBajando.png");
    monstruoTex[2].loadFromFile("./texturas/fantasmaIzquierda.png");
    monstruoTex[3].loadFromFile("./texturas/fantasmaDerecha.png");

    //Generacion de fantasmas con hilos
    std::vector<sf::Vector2f> posicionesFantasmas = { {8020.f, 1000.f}, {1870.f, 1900.f }, {1700.f, 520.f}, {5805.f, 6500.f},{20.f, 5000.f} ,{6381.f, 4923.f}, {7542.f, 3812.f}, {8713.f, 2831.f}, {9482.f, 7203.f},
        {4183.f, 3942.f}, {5219.f, 1234.f}, {6731.f, 4931.f}, {7493.f, 3814.f}, {8123.f, 2941.f}, {9142.f, 8492.f},
    {3941.f, 7210.f}, {4819.f, 5192.f}, {6312.f, 9401.f}, {7124.f, 1832.f}, {8341.f, 5821.f}, {9183.f, 2942.f}, {1529.f, 4831.f}, {2834.f, 5912.f}, {3729.f, 8042.f}, {4912.f, 1493.f},
    {5123.f, 7321.f}, {6921.f, 1403.f}, {7812.f, 3842.f}, {8423.f, 5193.f}, {9291.f, 1943.f}, {1832.f, 7481.f}, {2493.f, 3821.f}, {3712.f, 5612.f}, {4983.f, 7401.f}, {6124.f, 1728.f},
    {7321.f, 2049.f}, {8429.f, 5921.f}, {9204.f, 4819.f}, {3942.f, 1512.f}, {5129.f, 7310.f}, {6383.f, 4912.f}, {7541.f, 3802.f}, {8712.f, 2839.f}, {9481.f, 7201.f}, {4182.f, 3941.f},
    {5218.f, 1231.f}, {6733.f, 4919.f}, {7491.f, 3804.f}, {8124.f, 2912.f}, {9141.f, 8491.f}, {3940.f, 7212.f}, {4813.f, 5189.f}, {6310.f, 9403.f}, {7123.f, 1829.f}, {8342.f, 5812.f},
    {9182.f, 2941.f}, {1523.f, 4832.f}, {2831.f, 5913.f}, {3728.f, 8041.f}, {4913.f, 1492.f}, {5128.f, 7329.f}, {6923.f, 1402.f}, {7811.f, 3841.f}, {8422.f, 5192.f}, {9293.f, 1942.f},
    {1831.f, 7480.f}, {2492.f, 3823.f}, {3710.f, 5613.f}, {4981.f, 7400.f}, {6121.f, 1729.f}, {7328.f, 2048.f}, {8420.f, 5920.f}, {9201.f, 4818.f}, {3949.f, 1511.f}, {5121.f, 7311.f},
    {6384.f, 4913.f}, {7543.f, 3801.f}, {8714.f, 2830.f}, {9480.f, 7202.f}, {4181.f, 3940.f}, {5211.f, 1230.f}, {6732.f, 4918.f}, {7494.f, 3803.f}, {8121.f, 2911.f}, {9140.f, 8490.f},
    {3943.f, 7211.f}, {4812.f, 5188.f}, {6313.f, 9402.f}, {7122.f, 1828.f}, {8340.f, 5811.f}, {9181.f, 2940.f}, {1524.f, 4833.f}, {2832.f, 5910.f}, {3727.f, 8040.f}, {4910.f, 1491.f},
    {5127.f, 7320.f}, {6922.f, 1401.f}, {7813.f, 3840.f}, {8424.f, 5191.f}, {9290.f, 1941.f}, {1830.f, 7482.f}, {2491.f, 3822.f}, {3711.f, 5611.f}, {4984.f, 7402.f}, {6122.f, 1727.f},
    {7322.f, 2047.f}, {8427.f, 5922.f}, {9202.f, 4817.f}, {3947.f, 1510.f}, {5122.f, 7313.f}, {6382.f, 4911.f}, {7540.f, 3800.f}, {8711.f, 2838.f}, {9483.f, 7200.f}, {4184.f, 3943.f},
    {5217.f, 1233.f}, {6730.f, 4910.f}, {7490.f, 3805.f}, {8120.f, 2910.f}, {9143.f, 8493.f}, {3946.f, 7214.f}, {4811.f, 5187.f}, {6311.f, 9400.f}, {7121.f, 1827.f}, {8343.f, 5813.f},
    {9180.f, 2943.f}, {1522.f, 4830.f}, {2830.f, 5911.f}, {3720.f, 8043.f}, {4914.f, 1490.f}, {5126.f, 7328.f}, {6920.f, 1400.f}, {7814.f, 3843.f}, {8425.f, 5190.f}, {9292.f, 1940.f},
    {1834.f, 7484.f}, {2494.f, 3820.f}, {3713.f, 5610.f}, {4980.f, 7404.f}, {6120.f, 1726.f}, {7320.f, 2046.f}, {8426.f, 5923.f}, {9200.f, 4816.f}, {3944.f, 1513.f}, {5125.f, 7312.f},
    {6380.f, 4914.f}, {7544.f, 3806.f}, {8710.f, 2832.f}, {9484.f, 7205.f}, {4180.f, 3945.f}, {5216.f, 1232.f}, {6735.f, 4914.f}, {7495.f, 3807.f}, {8125.f, 2913.f}, {9144.f, 8494.f},
    {3945.f, 7213.f}, {4810.f, 5186.f}, {6314.f, 9404.f}, {7120.f, 1826.f}, {8344.f, 5814.f}, {9185.f, 2944.f}, {1521.f, 4834.f}, {2833.f, 5914.f}, {3724.f, 8044.f}, {4915.f, 1494.f},
    {5120.f, 7327.f}, {6924.f, 1404.f}, {7810.f, 3844.f}, {8428.f, 5194.f}, {9294.f, 1944.f}, {1833.f, 7485.f}, {2490.f, 3824.f}, {3715.f, 5614.f}, {4985.f, 7405.f}, {6125.f, 1724.f},
    {7324.f, 2045.f}, {8429.f, 5924.f}, {9205.f, 4815.f}, {3945.f, 1514.f}, {5128.f, 7314.f}, {6385.f, 4915.f}, {7545.f, 3809.f}, {8715.f, 2833.f}, {9485.f, 7206.f}, {4185.f, 3944.f},
    {5215.f, 1235.f},{220.f, 0.f}, {520.f, 50.f }, {820.f, 0.f}, {823.f, 10.f},{1200.f, 0.f},
        { 1180.f, 10.f }, {1220.f, 10.f}, {2349.f, 9834.f}, {6551.f, 1209.f}, {1903.f, 7872.f}, {8734.f, 4902.f}, {3457.f, 6238.f}, {7290.f, 8456.f}, {5134.f, 2234.f}, {8612.f, 6720.f},
    {1278.f, 9432.f}, {4532.f, 5830.f}, {9081.f, 4723.f}, {6712.f, 2312.f}, {3940.f, 8904.f}, {7201.f, 6135.f}, {8231.f, 5204.f}, {2583.f, 3987.f}, {9403.f, 7401.f}, {6842.f, 1532.f},
    {3129.f, 8302.f}, {5731.f, 2018.f}, {1482.f, 7459.f}, {8154.f, 6423.f}, {9285.f, 5082.f}, {4923.f, 1756.f}, {2610.f, 8209.f}, {7523.f, 3614.f}, {1098.f, 9593.f}, {6341.f, 2712.f},
    {8423.f, 3129.f}, {7892.f, 6820.f}, {4539.f, 5471.f}, {1973.f, 6812.f}, {6394.f, 2843.f}, {5923.f, 3921.f}, {7428.f, 5123.f}, {8045.f, 7523.f}, {5610.f, 6810.f}, {1265.f, 9374.f},
    {3829.f, 5942.f}, {8923.f, 1234.f}, {6593.f, 8104.f}, {7421.f, 2341.f}, {5102.f, 4720.f}, {3261.f, 9281.f}, {1923.f, 6481.f}, {8371.f, 5214.f}, {7492.f, 3712.f}, {2834.f, 8140.f},
    {6402.f, 3710.f}, {5184.f, 6234.f}, {2910.f, 4921.f}, {8293.f, 3842.f}, {7102.f, 5723.f}, {4523.f, 6921.f}, {3629.f, 8273.f}, {7193.f, 1923.f}, {5902.f, 7431.f}, {9482.f, 3721.f},
    {6134.f, 2801.f}, {4829.f, 7219.f}, {2342.f, 1832.f}, {5734.f, 4823.f}, {9210.f, 3941.f}, {3923.f, 2719.f}, {7391.f, 8012.f}, {8134.f, 1209.f}, {6523.f, 6914.f}, {2149.f, 8910.f},
    {9102.f, 3142.f}, {3742.f, 9021.f}, {6592.f, 1423.f}, {8234.f, 6319.f}, {3182.f, 7512.f}, {7293.f, 2301.f}, {5492.f, 4832.f}, {8291.f, 5793.f}, {6412.f, 3742.f}, {2143.f, 9281.f},
    {9104.f, 4923.f}, {2784.f, 6310.f}, {3721.f, 8423.f}, {4892.f, 2104.f}, {5921.f, 7312.f}, {9231.f, 3401.f}, {7204.f, 1943.f}, {5839.f, 7812.f}, {1924.f, 9201.f}, {7423.f, 3842.f}
    };
    std::vector<sf::Vector2f> posicionesZombies = {
    {7892, 3459}, {1237, 6274}, {4863, 2389}, {9654, 1321}, {7021, 5760}, {5486, 8059}, {8493, 7284}, {3279, 6167}, {2670, 912}, {6137, 2455}, {2481, 6743},
    {852, 9583}, {2761, 4395}, {5784, 2849}, {7812, 6000}, {6187, 2097}, {4512, 4738}, {5001, 2871}, {5894, 1745}, {4625, 3879}, {2396, 7404}, {6804, 1302}, {2921, 8345},
    {5038, 6521}, {7551, 3245}, {8129, 9437}, {1782, 7923}, {3621, 1849}, {2493, 5093}, {6152, 7614}, {9038, 4327}, {4675, 6891}, {1759, 8273}, {5482, 6213}, {928, 8084},
    {5947, 5043}, {2758, 3291}, {7218, 8497}, {3526, 4995}, {8307, 1976}, {2894, 9273}, {7723, 5108}, {5921, 2862}, {1236, 7934}, {7513, 3548}, {2438, 5719}, {5396, 9254},
    {8847, 2348}, {9671, 6102}, {8492, 7326}, {6213, 5834}, {4138, 7835}, {3942, 6781}, {4705, 1428}, {6139, 5097}, {3276, 4359}, {9346, 8247}, {3158, 7281}, {7158, 6243},
    {8374, 1946}, {4089, 8931}, {1756, 7642}, {2819, 9153}, {1942, 7598}, {8476, 1537}, {5127, 5672}, {9203, 1358}, {6012, 6297}, {1835, 9321}, {9291, 8295}, {6409, 1847},
    {5248, 3047}, {4817, 2438}, {1085, 8319}, {7236, 6125}, {8762, 5408}, {8015, 2679}, {3684, 7901}, {7034, 4920}, {3182, 7862}, {4927, 5205}, {4271, 9138}, {7801, 6354},
    {3956, 5093}, {2109, 6081}, {7184, 2348}, {6817, 5293}, {8029, 5439}, {4395, 9716}, {2948, 1239}, {8417, 3157}, {684, 9057}, {9458, 3604}, {4563, 2894}, {2734, 4978},
    {3196, 8049}, {4732, 2984}, {8513, 6847}, {7309, 2537}, {7008, 8971}, {7461, 1398}, {8465, 3094}, {3815, 9283}, {6087, 1979}, {5713, 6482}, {3892, 4715}, {5281, 7260},
    {7081, 3694}, {1036, 8496}, {7394, 5187}, {4062, 6813}, {7852, 4094}, {1928, 7461}, {9517, 3467}, {809, 7402}, {8431, 5789}, {5230, 3198}, {6094, 2172}, {3765, 9521},
    {7293, 4824}, {48, 1274}, {5189, 6732}, {695, 1578}, {6249, 5137}, {2843, 9618}, {1873, 3594}, {4526, 8904}, {7238, 4035}, {1381, 9262}, {9613, 6397}, {4704, 3569},
    {7194, 4987}, {9030, 4394}, {8547, 1035}, {4827, 2745}, {6745, 3847}, {2046, 8704}, {2147, 6897}, {7592, 2403}, {3514, 1971}, {1067, 5023}, {8016, 6891}, {1753, 8196},
    {9128, 1493}, {5876, 5391}, {3721, 2843}, {8106, 4628}, {5309, 9325}, {1463, 6084}, {4278, 4985}, {3920, 6738}, {7348, 2837}, {2103, 9348}, {3029, 1943}, {6528, 6271},
    {9508, 1521}, {2, 2748}, {4215, 3698}, {7468, 6782}, {5389, 7036}, {1382, 4675}, {6095, 7921}, {9204, 2456}, {2478, 9173}, {5731, 6027}, {6487, 1738}, {2107, 6793},
    {7521, 2813}, {2871, 9728}, {9865, 3017}, {9021, 1096}, {5874, 6728}, {1374, 4729}, {6834, 1347}, {4018, 6213}, {2051, 7234}, {8104, 2901}, {7403, 5062}, {4729, 6274},
    {3953, 2106}, {2748, 3401}, {5971, 1879}, {9357, 9247}, {1348, 7162}, {7421, 4981}, {8248, 5132}, {1562, 6827}, {6521, 4318}, {2749, 8396}, {4308, 9073}, {7043, 5374},
    {6091, 9347}, {532, 2743}, {7018, 5128}, {8427, 6245}, {2485, 3402}, {5942, 8041}, {2394, 7256}, {7982, 1863}, {5319, 5173}, {2847, 3694}, {8013, 9358}, {3261, 2981},
    {4576, 5107}, {9052, 2367}, {7123, 6195}, {1928, 7601}, {5647, 2345}, {2987, 4987}, {5398, 4831}, {1427, 2953}, {3651, 1875}, {6128, 5436}, {705, 8035}, {4738, 1608},
    {3016, 4129}, {6721, 1274}, {2416, 8497}, {8910, 4573}, {1479, 7829}, {3201, 1827}, {9847, 5249}, {8294, 2935}, {6921, 1374}, {3471, 9523}, {6589, 6710}, {3812, 4057},
    {4721, 5930}, {7069, 5284}, {4137, 3621}, {6984, 5106}, {8165, 1426}, {9268, 5147}, {2573, 3046}, {9782, 5926}, {1604, 1043}, {1459, 1834}, {3657, 6938}, {1086, 7314},
    {2047, 6817}, {8317, 2856}, {6097, 4925}, {2345, 4028}, {7648, 1402}, {5408, 2396}, {7025, 9371}, {1609, 2718}, {4032, 7137}, {6891, 2385}, {5273, 1734}, {4168, 7985},
    {1032, 7047}, {9145, 2952}, {7523, 4128}, {512, 1049}, {6983, 9345}, {2157, 2834}, {1746, 7843}, {3281, 3726}, {5213, 7269}, {4501, 9418}, {7916, 3248}, {2897, 1745},
    {25, 1804}, {9032, 7389}, {2951, 9473}, {8359, 2984}, {5834, 6145}, {6294, 7042}, {4513, 3892}, {414, 8203}, {7253, 1904}, {1843, 3617}, {3209, 7024}, {5913, 8402},
    {8275, 1207}, {4309, 3154}, {9516, 4291}, {6895, 5307}, {2745, 8317}, {6125, 7382}, {2874, 1945}, {5032, 7846}, {4198, 7261}, {1385, 6172}, {7047, 1381}, {8264, 2931},
    {4518, 4068}, {6301, 5102}, {57, 7374}, {7826, 5401}, {9738, 3748}, {5192, 8935}, {1681, 4753}, {4017, 5286}, {6351, 3948}, {5084, 5298}, {2749, 8031}, {6193, 1748},
    {9015, 3921}, {2314, 6083}, {5791, 8714}, {3615, 2987}, {7243, 1278}, {2049, 8725}, {4819, 1403}, {7016, 2387}, {4593, 5034}, {9374, 6849}, {3842, 1093}, {1485, 8243},
    {9105, 2743}, {3072, 6514}, {8193, 4257}, {2574, 5321}, {6785, 1056}, {7032, 8307}, {5892, 1843}, {5218, 2497}, {3625, 9387}, {4925, 1748}, {9107, 1354}, {1859, 9745},
    {4093, 7128}, {9514, 5028}, {5184, 2016}, {2741, 3024}, {8916, 5183}, {5382, 6104}, {1408, 9213}, {6419, 2705}, {3786, 1273}, {5721, 6189}, {4827, 5012}, {9147, 2938},
    {5271, 7291}, {3948, 6014}, {2876, 4816}, {6083, 3916}, {3512, 2096}, {7853, 5201}, {6901, 3029}, {3294, 7385}, {8407, 2841}, {2378, 6184}, {7102, 5814}, {6017, 7028},
    {5173, 8274}, {4038, 5917}, {3524, 2186}, {7191, 7365}, {9403, 1743}, {5201, 8724}, {1487, 2904}, {6279, 1841}, {1581, 4018}, {9134, 2056}, {5194, 8724}, {3701, 9182},
    {1461, 2841}, {5714, 1743}, {9421, 6829}, {5307, 2374}, {1586, 7041}, {9132, 1743}, {5214, 8927}, {1482, 4096}, {3724, 5028}, {1579, 8203}, {5734, 7285}, {4037, 1297},
    {2403, 5872}, {3791, 9318}, {5123, 2894}, {6401, 2847}, {2308, 5029}, {6218, 1743}, {3752, 4897}, {5297, 7243}, {1407, 2984}, {4924, 6723}, {3901, 8374}, {7014, 2918},
    {1483, 4238}, {6732, 2951}, {2106, 5897}, {5208, 2784}, {6913, 1207}, {1507, 4985}, {7123, 6309}, {9401, 1276}, {1453, 3714}, {6183, 7234}, {924, 9098}, {7309, 8306},
    {3058, 4719}, {7458, 1504}, {8361, 1984}, {4062, 7284}, {1738, 6897}, {6895, 2406}, {8329, 2058}, {5197, 8354}, {9274, 2073}, {1837, 7493}, {2401, 7319}, {3824, 4897},
    {5304, 3248}, {8318, 6149}, {2473, 5827}, {6013, 1947}, {5298, 5078}, {2016, 8327}, {6843, 1924}, {3794, 8238}, {2403, 7217}, {5829, 1907}, {2741, 6029}, {9018, 7358},
    {2749, 1908}, {6204, 4817}, {7894, 2301}, {1408, 7294}, {3647, 8421}, {4719, 2074}, {5803, 1937}, {2947, 8403}, {5284, 2308}, {6418, 9234}, {3916, 8304}, {5302, 1731},
    {8234, 1742}, {9028, 5817}, {3701, 1934}, {2408, 2981}, {5893, 9327}, {3107, 2743}, {5027, 8096}, {7025, 5829}, {2401, 9027}, {6293, 1273}, {4819, 9371}, {4702, 2371},
    {5191, 3284}, {9204, 2317}, {3087, 5832}, {8274, 1743}, {5203, 6718}, {1403, 5294}, {3181, 4938}, {5274, 1984}, {2734, 8402}, {5816, 4972}, {2083, 8294}, {7419, 8402},
    {5283, 2018}, {1401, 872}, {7038, 2308}, {5297, 8304}, {6108, 2837}, {3947, 2731}, {2406, 4289}, {1403, 8017}, {4083, 6729}, {5214, 2837}, {2097, 2804}, {3276, 3891},
    {1483, 9024}, {2401, 1028}, {4897, 4872}, {3217, 9402}, {6401, 1873}, {8209, 3719}, {5208, 3294}, {3821, 2791}, {1743, 8297}, {2301, 3487}, {1028, 5913}, {8096, 3794},
    {4817, 1923}, {2907, 5238}, {5782, 8274}, {2914, 2743},  {2983, 1724}, {4817, 2093}, {5098, 7294}, {1034, 2918}, {4031, 8791}, {5891, 8304},
    {7293, 2934}, {2184, 1782}, {7218, 1031}, {3894, 1403}, {2379, 8924}, {1283, 2739}, {8401, 5214}, {2037, 1203}, {2319, 2943}, {7214, 2394}, {4897, 2382}, {1834, 4021},
    {7301, 2934}, {1097, 428}, {5813, 3029}, {1408, 3897}, {5934, 8014}, {2894, 1428}, {7201, 2837}, {2309, 5201}, {6921, 2874}, {4983, 8923}, {2874, 2403}, {8301, 5297},
    {2403, 5097}, {7298, 2304}, {3084, 4018}, {1203, 4017}, {2934, 8218}, {4728, 2382}, {4897, 1938}, {1783, 5298}, {7248, 4816}, {1403, 3027}, {2403, 3094}, {6724, 2907},
    {7293, 2018}, {8921, 3094}, {93, 8374}, {7029, 1203}, {3824, 5097}, {2904, 4092}, {1827, 5094}, {2384, 4017}, {7218, 2904}, {321, 8894}, {2834, 4032}, {5097, 4201},
    {1724, 5934}, {2804, 2934}, {2918, 7182}, {2894, 3024}, {1297, 907}, {8391, 2849}, {1203, 5917}, {2891, 5294}, {7213, 1397}, {2981, 8403}, {2017, 3149}, {7213, 4732},
    {8927, 2803}, {1304, 9101}, {2894, 7201}, {2371, 4328}, {31, 5801}, {3084, 7218}, {3907, 1324}, {2874, 1283}, {2849, 4702}, {2017, 5201}, {4897, 7213}, {2018, 4897},
    {2389, 1824}, {3248, 1783}, {4872, 1784}, {1403, 2734}, {2401, 2783}, {2384, 2091}, {5028, 1034}, {3721, 1403}, {4901, 4872}, {4021, 3087}, {1031, 4017}, {2374, 7291},
    {1034, 8904}, {2918, 7234}, {4902, 3094}, {1824, 1873}, {1031, 8904}, {3017, 2891}, {1403, 2803}, {2017, 2874}, {2734, 2803}, {7218, 4017}, {1827, 8923}, {4872, 4203},
    {3027, 3029}, {2918, 2894}, {2734, 2918}, {3827, 3094}, {3094, 4021}, {4732, 7214}, {1031, 8804}, {2379, 7204}, {4021, 4817}, {4021, 1938}, {7218, 4872}, {3721, 2891},
    {2017, 1408}, {2016, 3094}, {3094, 2018}, {1723, 2907}, {7214, 4738}, {2891, 1034}, {1408, 4032}, {1784, 6018}, {2907, 4817}, {4721, 3029}, {7213, 2094}, {3084, 4728},
    {2824, 4824}, {7204, 2894}, {1293, 4729}, {7213, 1827}, {1824, 1324}, {2918, 4716}, {2914, 1734}, {1031, 3094}, {3029, 4824}, {4872, 4897}, {7218, 3024}, {3017, 7214},
    {4732, 1203}, {7214, 1783}, {2094, 4872}, {2724, 1034}, {7204, 4017}, {2028, 7213}, {2918, 4872}, {1408, 3094}, {3721, 4721}, {4872, 1324}, {2734, 3029}, {4902, 2874},
    {1834, 9094}, {2017, 1324}, {3027, 2927}, {2017, 1321}, {3024, 2094}, {7218, 2017}, {3024, 1824}, {2734, 7213}, {31, 1408}, {2406, 3907}, {1094, 9024}, {5031, 8018},
    {2017, 3024}, {7218, 2094}, {1408, 6024}, {3094, 3027}, {7213, 1034}, {2028, 1324}, {7218, 2907}, {2027, 7213}, {7218, 4824}, {2803, 3017}, {7218, 3024}
    };


    generarFantasmas(posicionesFantasmas);
    generarZombies(posicionesZombies);

    std::thread hiloZombies(&Juego::generarZombies, this, std::ref(posicionesZombies));
    std::thread hiloFantasmas(&Juego::generarFantasmas, this, std::ref(posicionesFantasmas));

    hiloFantasmas.join();
    hiloZombies.join();
}
// ========================= INICIO DE LAS MODIFICACIONES =========================== //
void Juego::generarZombies(std::vector<sf::Vector2f>& posiciones) {

    for (std::size_t i = 0; i < posiciones.size(); i++) {
        zombies.push_back(std::make_unique<Zombie>(zombiesTex[1], posiciones[i]));
    }
}
// ========================== FIN DE LAS MODIFICACIONES ============================= //

void Juego::generarFantasmas(std::vector<sf::Vector2f>& posiciones) {
    for (std::size_t i = 0; i < posiciones.size(); i++) {
        fantasmas.push_back(std::make_unique<Fantasma>(monstruoTex[1], posiciones[i]));
    }
    float angle = static_cast<float>(rand()) / RAND_MAX * 2 * 3.1f;
    direcciones.push_back(sf::Vector2f(std::cos(angle), std::sin(angle)));
}

void Juego::cargarJugadorTexturas() {
    jugadorTex[0].loadFromFile("./texturas/cazadorSubiendo.png"); // Arriba
    jugadorTex[1].loadFromFile("./texturas/cazadorBajando.png"); // Abajo
    jugadorTex[2].loadFromFile("./texturas/cazadorIzquierda.png"); // Izquierda
    jugadorTex[3].loadFromFile("./texturas/cazadorDerecha.png"); // Derecha
    jugador.setTexture(jugadorTex[3]);
    jugador.setScale(2.f, 2.f);
    jugador.setOrigin(12.f, 20.f);
}

void Juego::cargarJugador2Texturas() {
    jugador2Tex[0].loadFromFile("./texturas/cazador2Subiendo.png"); // Arriba
    jugador2Tex[1].loadFromFile("./texturas/cazador2Bajando.png"); // Abajo
    jugador2Tex[2].loadFromFile("./texturas/cazador2Izquierda.png"); // Izquierda
    jugador2Tex[3].loadFromFile("./texturas/cazador2Derecha.png"); // Derecha
    jugador2.setTexture(jugador2Tex[3]);
    jugador2.setScale(2.f, 2.f);
    jugador2.setOrigin(12.f, 20.f);
}


bool Juego::verificarColision(const sf::Sprite& jugador) {
    float jugadorRadio = 8.f;

    sf::FloatRect jugadorArea(jugador.getPosition().x - jugadorRadio,
        jugador.getPosition().y - jugadorRadio,
        jugadorRadio * -0.5f, jugadorRadio * -0.5f);

    if (!fondo.getGlobalBounds().intersects(jugadorArea)) {
        return true;
    }

    sf::FloatRect adjustedArea(jugador.getPosition().x - jugadorRadio * -1.1f,
        jugador.getPosition().y - jugadorRadio * -1.5,
        jugadorRadio * 0.2f, jugadorRadio * 0.2f);
    ///////////////////Para el mapa
    for (const auto& pasto : mapa.obtenerpastos2()) {
        if (pasto.getGlobalBounds().intersects(adjustedArea)) {
            return false;
        }
    }

    for (const auto& camino : mapa.obtenercaminos()) {
        if (camino.getGlobalBounds().intersects(adjustedArea)) {
            return false;
        }
    }
    /////////////
    if (jugador.getPosition().x - jugadorRadio < fondo.getPosition().x ||
        jugador.getPosition().x + jugadorRadio > fondo.getPosition().x + fondo.getSize().x ||
        jugador.getPosition().y - jugadorRadio < fondo.getPosition().y ||
        jugador.getPosition().y + jugadorRadio > fondo.getPosition().y + fondo.getSize().y) {
        return false;
    }

    return true;
}

void Juego::dibujar() {
    ventana.clear();

    ventana.draw(fondo);

    mapa.dibujar(ventana);


    for (const auto& rayo : rayos) {
        ventana.draw(rayo);
    }

    for (std::size_t i = 0; i < fantasmas.size(); i++) {
        ventana.draw(fantasmas[i]->monstruo);
        ventana.draw(fantasmas[i]->barraVidaMonstruo);
    }

    for (std::size_t i = 0; i < zombies.size(); i++) {
        ventana.draw(zombies[i]->monstruo);
        ventana.draw(zombies[i]->barraVidaMonstruo);
    }


    if (vidaJugador > 0) {
        ventana.draw(barraVidaJugador);
        ventana.draw(jugador);
    }

    if (vidaJugador2 > 0) {
        ventana.draw(barraVidaJugador2);
        ventana.draw(jugador2);
    }

    if (mostrarFantasma) ventana.draw(fantasma);
    ventana.draw(barraVidaFantasma); // Dibujar la barra de vida del fantasma

    ventana.display();
}

void Juego::manejarEntradaJugador(sf::Keyboard::Key tecla, bool presionada) {
    if (tecla == sf::Keyboard::W) {
        moviendoArriba = presionada;
    }
    else if (tecla == sf::Keyboard::S) {
        moviendoAbajo = presionada;
    }
    else if (tecla == sf::Keyboard::A) {
        moviendoIzquierda = presionada;
    }
    else if (tecla == sf::Keyboard::D) {
        moviendoDerecha = presionada;
    }

    if (tecla == sf::Keyboard::Space && presionada) {
        yaDisparo = true;
        disparando = true;
    }
}

void Juego::manejarEntradaJugador2(sf::Keyboard::Key tecla, bool presionada) {
    if (tecla == sf::Keyboard::Up) {
        moviendoArriba2 = presionada;
    }
    else if (tecla == sf::Keyboard::Down) {
        moviendoAbajo2 = presionada;
    }
    else if (tecla == sf::Keyboard::Left) {
        moviendoIzquierda2 = presionada;
    }
    else if (tecla == sf::Keyboard::Right) {
        moviendoDerecha2 = presionada;
    }

    if (tecla == sf::Keyboard::Enter && presionada) {
        yaDisparo2 = true;
        disparando2 = true;
    }
}
void Juego::actualizar() {

    if (vidaJugador > 0 && vidaJugador2 > 0) {
        sf::Vector2f centroVista((jugador.getPosition().x + jugador2.getPosition().x) / 2,
            (jugador.getPosition().y + jugador2.getPosition().y) / 2);
        vista.setCenter(centroVista);
        ventana.setView(vista);

    }
    else if (vidaJugador > 0 && vidaJugador2 <= 0) {
        vista.setCenter(jugador.getPosition());
        ventana.setView(vista);

    }
    else if (vidaJugador2 > 0 && vidaJugador <= 0) {
        vista.setCenter(jugador2.getPosition());
        ventana.setView(vista);
    }
    else {
        vista.setCenter(jugador.getPosition());
        ventana.setView(vista);
    }


    // Actualización de movimientos de jugadores
    sf::Vector2f movimiento{ velocidad * (moviendoDerecha - moviendoIzquierda), velocidad * (moviendoAbajo - moviendoArriba) };
    sf::Vector2f movimiento2{ velocidad * (moviendoDerecha2 - moviendoIzquierda2), velocidad * (moviendoAbajo2 - moviendoArriba2) };

    // Actualización de texturas y direcciones de rayos para el jugador 1
    if (moviendoArriba) {
        rayoPotencialDireccion = { 0.f, -1.f, -90.f };
        jugador.setTexture(jugadorTex[0]);
    }
    if (moviendoAbajo) {
        rayoPotencialDireccion = { 0.f, 1.f, 90.f };
        jugador.setTexture(jugadorTex[1]);
    }
    if (moviendoIzquierda) {
        rayoPotencialDireccion = { -1.f, 0.f, 180.f };
        jugador.setTexture(jugadorTex[2]);
    }
    if (moviendoDerecha) {
        rayoPotencialDireccion = { 1.f, 0.f, 0.f };
        jugador.setTexture(jugadorTex[3]);
    }

    // Actualización de texturas y direcciones de rayos para el jugador 2
    if (moviendoArriba2) {
        rayoPotencialDireccion2 = { 0.f, -1.f, -90.f };
        jugador2.setTexture(jugador2Tex[0]);
    }
    if (moviendoAbajo2) {
        rayoPotencialDireccion2 = { 0.f, 1.f, 90.f };
        jugador2.setTexture(jugador2Tex[1]);
    }
    if (moviendoIzquierda2) {
        rayoPotencialDireccion2 = { -1.f, 0.f, 180.f };
        jugador2.setTexture(jugador2Tex[2]);
    }
    if (moviendoDerecha2) {
        rayoPotencialDireccion2 = { 1.f, 0.f, 0.f };
        jugador2.setTexture(jugador2Tex[3]);
    }

    const auto norm = std::sqrt(movimiento.x * movimiento.x + movimiento.y * movimiento.y);
    if (norm > 0.f) {
        movimiento.x = velocidad * (movimiento.x / norm);
        movimiento.y = velocidad * (movimiento.y / norm);
    }

    const auto norm2 = std::sqrt(movimiento2.x * movimiento2.x + movimiento2.y * movimiento2.y);
    if (norm2 > 0.f) {
        movimiento2.x = velocidad * (movimiento2.x / norm2);
        movimiento2.y = velocidad * (movimiento2.y / norm2);
    }
    ////////////////

    // Actualización de los fantasmas
    for (std::size_t i = 0; i < fantasmas.size(); ++i) {
        sf::Vector2f objetivo1 = jugador.getPosition() - fantasmas[i]->monstruo.getPosition();
        sf::Vector2f objetivo2 = jugador2.getPosition() - fantasmas[i]->monstruo.getPosition();

        float distancia1 = std::sqrt(objetivo1.x * objetivo1.x + objetivo1.y * objetivo1.y);
        float distancia2 = std::sqrt(objetivo2.x * objetivo2.x + objetivo2.y * objetivo2.y);

        auto direccion1 = objetivo1 / distancia1;
        auto direccion2 = objetivo2 / distancia2;

        if (vidaJugador > 0 && vidaJugador2 > 0) {
            if (distancia1 < distanciaMaxima || distancia2 < distanciaMaxima) {
                if (distancia1 < distancia2 && distancia1 <= distanciaMaxima) {
                    fantasmas[i]->perseguir(jugador);
                }
                else if (distancia2 <= distanciaMaxima) {
                    fantasmas[i]->perseguir(jugador2);
                }
                fantasmas[i]->actualizarTexturas(monstruoTex[0], monstruoTex[1], monstruoTex[2], monstruoTex[3]);
            }

            if (fantasmas[i]->monstruo.getGlobalBounds().intersects(jugador.getGlobalBounds())) {
                vidaJugador -= 0.02;
            }
            if (fantasmas[i]->monstruo.getGlobalBounds().intersects(jugador2.getGlobalBounds())) {
                vidaJugador2 -= 0.02;
            }
        }
        else if (vidaJugador > 0) {
            if (distancia1 <= distanciaMaxima) {
                fantasmas[i]->perseguir(jugador);
                fantasmas[i]->actualizarTexturas(monstruoTex[0], monstruoTex[1], monstruoTex[2], monstruoTex[3]);
                if (fantasmas[i]->monstruo.getGlobalBounds().intersects(jugador.getGlobalBounds())) {
                    vidaJugador -= 0.02;
                }
            }
        }
        else if (vidaJugador2 > 0) {
            if (distancia2 <= distanciaMaxima) {
                fantasmas[i]->perseguir(jugador2);
                fantasmas[i]->actualizarTexturas(monstruoTex[0], monstruoTex[1], monstruoTex[2], monstruoTex[3]);
            } if (fantasmas[i]->monstruo.getGlobalBounds().intersects(jugador2.getGlobalBounds())) {
                vidaJugador2 -= 0.02;
            }
        }
    }
    //Persecución de los zombies
    for (std::size_t i = 0; i < zombies.size(); ++i) {
        sf::Vector2f objetivo1 = jugador.getPosition() - zombies[i]->monstruo.getPosition();
        sf::Vector2f objetivo2 = jugador2.getPosition() - zombies[i]->monstruo.getPosition();

        float distancia1 = std::sqrt(objetivo1.x * objetivo1.x + objetivo1.y * objetivo1.y);
        float distancia2 = std::sqrt(objetivo2.x * objetivo2.x + objetivo2.y * objetivo2.y);

        auto direccion1 = objetivo1 / distancia1;
        auto direccion2 = objetivo2 / distancia2;

        if (vidaJugador > 0 && vidaJugador2 > 0) {
            if (distancia1 < distanciaMaxima || distancia2 < distanciaMaxima) {
                if (distancia1 < distancia2 && distancia1 <= distanciaMaxima) {//Recuerda hacer uso de verificra colison aqui
                    zombies[i]->perseguir(jugador);
                }
                else if (distancia2 <= distanciaMaxima) {
                    zombies[i]->perseguir(jugador2);
                }
                zombies[i]->actualizarTexturas(zombiesTex[0], zombiesTex[1], zombiesTex[2], zombiesTex[3]);
            }

            if (zombies[i]->monstruo.getGlobalBounds().intersects(jugador.getGlobalBounds())) {
                vidaJugador -= 0.05;
            }
            if (zombies[i]->monstruo.getGlobalBounds().intersects(jugador2.getGlobalBounds())) {
                vidaJugador2 -= 0.05;
            }
        }
        else if (vidaJugador > 0) {
            if (distancia1 <= distanciaMaxima) {
                zombies[i]->perseguir(jugador);
                zombies[i]->actualizarTexturas(zombiesTex[0], zombiesTex[1], zombiesTex[2], zombiesTex[3]);
                if (zombies[i]->monstruo.getGlobalBounds().intersects(jugador.getGlobalBounds())) {
                    vidaJugador -= 0.05;
                }
            }
        }
        else if (vidaJugador2 > 0) {
            if (distancia2 <= distanciaMaxima) {
                zombies[i]->perseguir(jugador2);
                zombies[i]->actualizarTexturas(zombiesTex[0], zombiesTex[1], zombiesTex[2], zombiesTex[3]);
            } if (zombies[i]->monstruo.getGlobalBounds().intersects(jugador2.getGlobalBounds())) {
                vidaJugador2 -= 0.05;
            }
        }
    }

    // Disparo de rayos por el jugador 1
    if (yaDisparo) {
        yaDisparo = false;
        sf::Sprite nuevoRayo;
        nuevoRayo.setTexture(rayoTexturas[3]);
        nuevoRayo.setRotation(rayoPotencialDireccion.angle);
        nuevoRayo.setPosition(jugador.getPosition());
        rayos.push_back(nuevoRayo);
    }

    // Disparo de rayos por el jugador 2
    if (yaDisparo2) {
        yaDisparo2 = false;
        sf::Sprite nuevoRayo;
        nuevoRayo.setTexture(rayoTexturas[3]);
        nuevoRayo.setRotation(rayoPotencialDireccion2.angle);
        nuevoRayo.setPosition(jugador2.getPosition());
        rayos.push_back(nuevoRayo);
    }

    // Actualización de los rayos
    for (auto& rayo : rayos) {
        rayo.move(std::cos(rayo.getRotation() * 3.14159 / 180) * 10.f,
            std::sin(rayo.getRotation() * 3.14159 / 180) * 10.f);

        if (!fondo.getGlobalBounds().intersects(rayo.getGlobalBounds())) {
            rayo.setColor(sf::Color::Transparent);
        }

        //Para bajar la vida de los fantasmas en caso que intersecten con el rayo
        for (auto it = fantasmas.begin(); it != fantasmas.end(); ) {
            if ((*it)->monstruo.getGlobalBounds().intersects(rayo.getGlobalBounds()) && (*it)->vida > 0) {
                rayo.setColor(sf::Color::Transparent);
                (*it)->vida--;

                if ((*it)->vida <= 0) {
                    it = fantasmas.erase(it);
                }
                else {
                    (*it)->barraVidaMonstruo.setSize(sf::Vector2f((*it)->vida * 8.f, 5.f));
                    (*it)->barraVidaMonstruo.setPosition((*it)->monstruo.getPosition().x - 18, (*it)->monstruo.getPosition().y - 30);
                    ++it;
                }
            }
            else {
                ++it;
            }
        }

        //Para bajar la vida de los zombies
        for (auto it = zombies.begin(); it != zombies.end(); ) {

            if ((*it)->monstruo.getGlobalBounds().intersects(rayo.getGlobalBounds()) && (*it)->vida > 0) {
                rayo.setColor(sf::Color::Transparent);
                (*it)->vida--;

                if ((*it)->vida <= 0) {
                    it = zombies.erase(it);
                }
                else {
                    (*it)->barraVidaMonstruo.setSize(sf::Vector2f((*it)->vida * 10.f, 5.f));
                    (*it)->barraVidaMonstruo.setPosition((*it)->monstruo.getPosition().x - 40, (*it)->monstruo.getPosition().y - 30);
                    ++it;
                }
            }
            else {
                ++it;
            }
        }
        /*
        barraVidaMonstruo.setSize(sf::Vector2f(vida * 30.f, 5.f));
        barraVidaMonstruo.setPosition(monstruo.getPosition().x - 34, monstruo.getPosition().y - 30);*/

        //Para abjar la vida del zombie de prueba
        if ((fantasma.getGlobalBounds().intersects(rayo.getGlobalBounds())) && vidaFantasma > 0) {
            rayo.setColor(sf::Color::Transparent);
            vidaFantasma--;
            if (vidaFantasma <= 0) {
                mostrarFantasma = false;
                barraVidaFantasma.setSize(sf::Vector2f(0.f, 0.f));
            }
            else {
                barraVidaFantasma.setSize(sf::Vector2f(vidaFantasma * 8.f, 5.f));
                barraVidaFantasma.setPosition(fantasma.getPosition().x + 10, fantasma.getPosition().y - 5);
            }
        }
    }

    // Eliminar los rayos transparentes
    rayos.erase(std::remove_if(rayos.begin(), rayos.end(), [](const sf::Sprite& rayo) {
        return rayo.getColor() == sf::Color::Transparent;
        }), rayos.end());

    // Movimiento de los jugadores
    auto originalPosition = jugador.getPosition();
    auto originalPosition2 = jugador2.getPosition();

    jugador.move(movimiento);
    jugador2.move(movimiento2);


    // Verificación de colisiones y ajustes de posición
    if (verificarColision(jugador)) {
        jugador.setPosition(originalPosition);
    }

    if (verificarColision(jugador2)) {
        jugador2.setPosition(originalPosition2);
    }

    if ((jugador.getGlobalBounds().intersects(fantasma.getGlobalBounds())) && vidaFantasma > 0) {
        jugador.setPosition(originalPosition);
        vidaJugador--;
    }

    if ((jugador2.getGlobalBounds().intersects(fantasma.getGlobalBounds())) && vidaFantasma > 0) {
        jugador2.setPosition(originalPosition2);
        vidaJugador2--;
    }

    // Actualización de las barras de vida
    barraVidaJugador.setSize(sf::Vector2f(vidaJugador * 10.f, 10.f));
    barraVidaJugador.setPosition(jugador.getPosition().x - 40, jugador.getPosition().y - 60);

    barraVidaJugador2.setSize(sf::Vector2f(vidaJugador2 * 10.f, 10.f));
    barraVidaJugador2.setPosition(jugador2.getPosition().x - 40, jugador2.getPosition().y - 60);

}

void Juego::procesarEventos() {
    sf::Event evento;
    while (ventana.pollEvent(evento)) {
        switch (evento.type) {
        case sf::Event::KeyPressed:
            manejarEntradaJugador(evento.key.code, true);
            manejarEntradaJugador2(evento.key.code, true);
            break;
        case sf::Event::KeyReleased:
            manejarEntradaJugador(evento.key.code, false);
            manejarEntradaJugador2(evento.key.code, false);
            break;
        case sf::Event::Closed:
            ventana.close();
            break;
        }
    }
    if (vidaJugador <= 0 && vidaJugador2 <= 0) {
        ventana.close();
    }
}

void Juego::correr() {
    while (ventana.isOpen()) {
        procesarEventos();
        actualizar();
        dibujar();
    }
}
//================== MENU ================================//
bool isButtonPressed(const sf::RectangleShape& button, const sf::Vector2i& mousePos) {
    return button.getGlobalBounds().contains(static_cast<sf::Vector2f>(mousePos));
}

int main() {
    sf::RenderWindow window(sf::VideoMode(1000, 800), "Cazador de Fantasmas - Menu de Inicio");

    sf::Texture backgroundTexture;
    if (!backgroundTexture.loadFromFile("./texturas/fondo.png")) {
        std::cerr << "Error al cargar la imagen de fondo" << std::endl;
    }
    sf::Sprite background(backgroundTexture);

    sf::Font font;
    if (!font.loadFromFile("./estilos/zombies.ttf")) {
        std::cerr << "Error al cargar la fuente" << std::endl;
    }

    sf::Text title("Cazadores de Monstruos", font, 50);
    title.setFillColor(sf::Color::White);
    title.setPosition((1000 - title.getGlobalBounds().width) / 2, 50);

    sf::RectangleShape startButton(sf::Vector2f(200, 50));
    startButton.setFillColor(sf::Color(128, 128, 128));
    startButton.setPosition((1000 - startButton.getSize().x) / 2, 200);

    sf::Text startText("Iniciar Juego", font, 20);
    startText.setFillColor(sf::Color::White);
    startText.setPosition(startButton.getPosition().x + (startButton.getSize().x - startText.getGlobalBounds().width) / 2, 215);

    sf::RectangleShape optionsButton(sf::Vector2f(200, 50));
    optionsButton.setFillColor(sf::Color(128, 128, 128));
    optionsButton.setPosition((1000 - optionsButton.getSize().x) / 2, 270);

    sf::Text optionsText("Opciones", font, 20);
    optionsText.setFillColor(sf::Color::White);
    optionsText.setPosition(optionsButton.getPosition().x + (optionsButton.getSize().x - optionsText.getGlobalBounds().width) / 2, 285);

    sf::RectangleShape instructionsButton(sf::Vector2f(200, 50));
    instructionsButton.setFillColor(sf::Color(128, 128, 128));
    instructionsButton.setPosition((1000 - instructionsButton.getSize().x) / 2, 340);

    sf::Text instructionsText("Instrucciones", font, 20);
    instructionsText.setFillColor(sf::Color::White);
    instructionsText.setPosition(instructionsButton.getPosition().x + (instructionsButton.getSize().x - instructionsText.getGlobalBounds().width) / 2, 355);

    sf::RectangleShape exitButton(sf::Vector2f(200, 50));
    exitButton.setFillColor(sf::Color(128, 128, 128));
    exitButton.setPosition((1000 - exitButton.getSize().x) / 2, 410);

    sf::Text exitText("Salir", font, 20);
    exitText.setFillColor(sf::Color::White);
    exitText.setPosition(exitButton.getPosition().x + (exitButton.getSize().x - exitText.getGlobalBounds().width) / 2, 425);

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
            if (event.type == sf::Event::MouseButtonPressed) {
                sf::Vector2i mousePos = sf::Mouse::getPosition(window);

                if (isButtonPressed(startButton, mousePos)) {
                    window.close();
                    std::cout << "Iniciar Juego presionado!" << std::endl;
                    try {
                        Juego::obtenerInstancia().correr();
                    }
                    catch (const std::exception& e) {
                        std::cerr << "Error: " << e.what() << std::endl;
                        return 1;
                    }
                    return 0;
                }
                if (isButtonPressed(optionsButton, mousePos)) {
                    std::cout << "Opciones presionado!" << std::endl;
                    // nada, solo queremos que se vea bonito ....
                }
                if (isButtonPressed(instructionsButton, mousePos)) {
                    std::cout << "Instrucciones presionado!" << std::endl;
                    // nada tampoco, solo queremos que se vea bonito .....
                }
                if (isButtonPressed(exitButton, mousePos)) {
                    std::cout << "Salir presionado!" << std::endl;
                    window.close();
                    return -1;
                }
            }
        }

        window.clear();
        window.draw(background);
        window.draw(title);
        window.draw(startButton);
        window.draw(startText);
        window.draw(optionsButton);
        window.draw(optionsText);
        window.draw(instructionsButton);
        window.draw(instructionsText);
        window.draw(exitButton);
        window.draw(exitText);
        window.display();
    }

    return 0;
}